<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CMakeRunConfigurationManager" shouldGenerate="true" shouldDeleteObsolete="true" buildAllGenerated="true">
    <generated>
      <config projectName="ceph" targetName="unittest_bit_vector" />
      <config projectName="ceph" targetName="ceph_test_keyvaluedb_atomicity" />
      <config projectName="ceph" targetName="unittest_simple_spin" />
      <config projectName="ceph" targetName="ceph_test_librbd_fsx" />
      <config projectName="ceph" targetName="unittest_admin_socket" />
      <config projectName="ceph" targetName="rocksdb_ext" />
      <config projectName="ceph" targetName="ceph_erasure_code_benchmark" />
      <config projectName="ceph" targetName="git-update" />
      <config projectName="ceph" targetName="unittest_safe_io" />
      <config projectName="ceph" targetName="unittest_tableformatter" />
      <config projectName="ceph" targetName="ceph-monstore-tool" />
      <config projectName="ceph" targetName="unittest_interval_map" />
      <config projectName="ceph" targetName="unittest_hitset" />
      <config projectName="ceph" targetName="ceph_test_rados_api_stat" />
      <config projectName="ceph" targetName="kv" />
      <config projectName="ceph" targetName="unittest_bufferlist" />
      <config projectName="ceph" targetName="ceph_test_rados" />
      <config projectName="ceph" targetName="unittest_crypto_init" />
      <config projectName="ceph" targetName="unittest_prebufferedstreambuf" />
      <config projectName="ceph" targetName="unittest_mds_sessionfilter" />
      <config projectName="ceph" targetName="lightnvm" />
      <config projectName="ceph" targetName="osdmaptool" />
      <config projectName="ceph" targetName="gmock_main" />
      <config projectName="ceph" targetName="ceph_test_libcephfs" />
      <config projectName="ceph" targetName="librados-config" />
      <config projectName="ceph" targetName="ceph-common" />
      <config projectName="ceph" targetName="unittest_bluestore_types" />
      <config projectName="ceph" targetName="cls_refcount_client" />
      <config projectName="ceph" targetName="unittest_erasure_code_shec" />
      <config projectName="ceph" targetName="unittest_mempool" />
      <config projectName="ceph" targetName="mount.ceph" />
      <config projectName="ceph" targetName="ceph_zstd" />
      <config projectName="ceph" targetName="ec_jerasure_sse4" />
      <config projectName="ceph" targetName="ec_jerasure_sse3" />
      <config projectName="ceph" targetName="cls_rbd" />
      <config projectName="ceph" targetName="unittest_ipaddr" />
      <config projectName="ceph" targetName="common-objs" />
      <config projectName="ceph" targetName="ceph_test_mon_workloadgen" />
      <config projectName="ceph" targetName="zstd_ext" />
      <config projectName="ceph" targetName="tests" />
      <config projectName="ceph" targetName="unittest_extent_cache" />
      <config projectName="ceph" targetName="unittest_ceph_crypto" />
      <config projectName="ceph" targetName="crypto_plugins" />
      <config projectName="ceph" targetName="cls_lua_client" />
      <config projectName="ceph" targetName="unittest_xlist" />
      <config projectName="ceph" targetName="ceph_omapbench" />
      <config projectName="ceph" targetName="rbd_api" />
      <config projectName="ceph" targetName="unittest_transaction" />
      <config projectName="ceph" targetName="cls_cephfs_client" />
      <config projectName="ceph" targetName="shec_utils" />
      <config projectName="ceph" targetName="ec_shec_generic" />
      <config projectName="ceph" targetName="vstart" />
      <config projectName="ceph" targetName="demo" />
      <config projectName="ceph" targetName="ceph_test_cls_sdk" />
      <config projectName="ceph" targetName="rbd_mirror_internal" />
      <config projectName="ceph" targetName="unittest_bounded_key_counter" />
      <config projectName="ceph" targetName="cls_hello" />
      <config projectName="ceph" targetName="ceph_perf_msgr_client" />
      <config projectName="ceph" targetName="unittest_xmlformatter" />
      <config projectName="ceph" targetName="cls_kvs" />
      <config projectName="ceph" targetName="ceph_test_cls_lock" />
      <config projectName="ceph" targetName="ceph_test_rados_api_service" />
      <config projectName="ceph" targetName="unittest_pg_transaction" />
      <config projectName="ceph" targetName="test_build_libcommon" />
      <config projectName="ceph" targetName="ceph_test_snap_mapper" />
      <config projectName="ceph" targetName="ceph-detect-init" />
      <config projectName="ceph" targetName="ec_lrc" />
      <config projectName="ceph" targetName="rados_striper_test" />
      <config projectName="ceph" targetName="ceph_test_libcephfs_access" />
      <config projectName="ceph" targetName="cls_timeindex" />
      <config projectName="ceph" targetName="os_tp" />
      <config projectName="ceph" targetName="unittest_str_list" />
      <config projectName="ceph" targetName="unittest_texttable" />
      <config projectName="ceph" targetName="unittest_mclock_op_class_queue" />
      <config projectName="ceph" targetName="ceph_test_cls_refcount" />
      <config projectName="ceph" targetName="cls_references_objs" />
      <config projectName="ceph" targetName="osd" />
      <config projectName="ceph" targetName="cls_user_client" />
      <config projectName="ceph" targetName="unittest_bluefs" />
      <config projectName="ceph" targetName="ceph_test_filestore" />
      <config projectName="ceph" targetName="ceph_test_rados_list_parallel" />
      <config projectName="ceph" targetName="unittest_time" />
      <config projectName="ceph" targetName="ceph-bluestore-tool" />
      <config projectName="ceph" targetName="unittest_osdscrub" />
      <config projectName="ceph" targetName="rgw_op-tp" />
      <config projectName="ceph" targetName="mon" />
      <config projectName="ceph" targetName="unittest_shared_cache" />
      <config projectName="ceph" targetName="unittest_lfnindex" />
      <config projectName="ceph" targetName="rbd-replay" />
      <config projectName="ceph" targetName="ceph_test_rados_watch_notify" />
      <config projectName="ceph" targetName="unittest_perf_counters" />
      <config projectName="ceph" targetName="ceph-client-debug" />
      <config projectName="ceph" targetName="ceph_scratchtoolpp" />
      <config projectName="ceph" targetName="journal_test_mock" />
      <config projectName="ceph" targetName="ceph_test_rados_open_pools_parallel" />
      <config projectName="ceph" targetName="unittest_lru" />
      <config projectName="ceph" targetName="rbd-replay-prep" />
      <config projectName="ceph" targetName="ceph_test_rados_api_c_read_operations" />
      <config projectName="ceph" targetName="unittest_pglog" />
      <config projectName="ceph" targetName="unittest_workqueue" />
      <config projectName="ceph" targetName="ceph_test_cls_statelog" />
      <config projectName="ceph" targetName="cls_rbd_client" />
      <config projectName="ceph" targetName="unittest_librados_config" />
      <config projectName="ceph" targetName="check" />
      <config projectName="ceph" targetName="unittest_iso_8601" />
      <config projectName="ceph" targetName="ec_fail_to_register" />
      <config projectName="ceph" targetName="cls_version" />
      <config projectName="ceph" targetName="unittest_json_formattable" />
      <config projectName="ceph" targetName="unittest_sharedptr_registry" />
      <config projectName="ceph" targetName="unittest_hostname" />
      <config projectName="ceph" targetName="unittest_blkdev" />
      <config projectName="ceph" targetName="cls_user" />
      <config projectName="ceph" targetName="ceph_test_rewrite_latency" />
      <config projectName="ceph" targetName="test_trans" />
      <config projectName="ceph" targetName="cls_sdk" />
      <config projectName="ceph" targetName="gf-complete_objs" />
      <config projectName="ceph" targetName="ceph_test_rados_api_tier" />
      <config projectName="ceph" targetName="ec_missing_entry_point" />
      <config projectName="ceph" targetName="ceph_test_rados_api_list" />
      <config projectName="ceph" targetName="ceph_test_librbd_api" />
      <config projectName="ceph" targetName="ceph_test_mutate" />
      <config projectName="ceph" targetName="rbd_types" />
      <config projectName="ceph" targetName="ceph_test_filejournal" />
      <config projectName="ceph" targetName="rbd_internal" />
      <config projectName="ceph" targetName="rados" />
      <config projectName="ceph" targetName="unittest_perf_histogram" />
      <config projectName="ceph" targetName="unittest_mclock_priority_queue" />
      <config projectName="ceph" targetName="unittest_encoding" />
      <config projectName="ceph" targetName="rbd_test_mock" />
      <config projectName="ceph" targetName="ceph_test_rbd_mirror_random_write" />
      <config projectName="ceph" targetName="rgw_rados-tp" />
      <config projectName="ceph" targetName="unittest_any" />
      <config projectName="ceph" targetName="unittest_shunique_lock" />
      <config projectName="ceph" targetName="cephfs-table-tool" />
      <config projectName="ceph" targetName="ceph-mgr" />
      <config projectName="ceph" targetName="ceph_example" />
      <config projectName="ceph" targetName="cls_replica_log" />
      <config projectName="ceph" targetName="ceph_test_rados_api_pool" />
      <config projectName="ceph" targetName="gtest" />
      <config projectName="ceph" targetName="unittest_mon_montypes" />
      <config projectName="ceph" targetName="krbd" />
      <config projectName="ceph" targetName="test_build_libcephfs" />
      <config projectName="ceph" targetName="ceph_erasure_code" />
      <config projectName="ceph" targetName="osd_tp" />
      <config projectName="ceph" targetName="ceph_test_cls_lua" />
      <config projectName="ceph" targetName="gtest_main" />
      <config projectName="ceph" targetName="unittest_erasure_code_shec_thread" />
      <config projectName="ceph" targetName="ec_example" />
      <config projectName="ceph" targetName="get_command_descriptions" />
      <config projectName="ceph" targetName="ceph_test_rados_api_aio" />
      <config projectName="ceph" targetName="ceph_test_cls_hello" />
      <config projectName="ceph" targetName="systest" />
      <config projectName="ceph" targetName="unittest_erasure_code_example" />
      <config projectName="ceph" targetName="ceph_zlib" />
      <config projectName="ceph" targetName="ceph_test_cls_replica_log" />
      <config projectName="ceph" targetName="common" />
      <config projectName="ceph" targetName="libglobal_objs" />
      <config projectName="ceph" targetName="unittest_erasure_code_shec_all" />
      <config projectName="ceph" targetName="unittest_pageset" />
      <config projectName="ceph" targetName="common_texttable_obj" />
      <config projectName="ceph" targetName="unittest_erasure_code" />
      <config projectName="ceph" targetName="unittest_log" />
      <config projectName="ceph" targetName="ceph-kvstore-tool" />
      <config projectName="ceph" targetName="unittest_util" />
      <config projectName="ceph" targetName="unittest_sloppy_crc_map" />
      <config projectName="ceph" targetName="ceph_test_rbd_mirror" />
      <config projectName="ceph" targetName="unittest_erasure_code_lrc" />
      <config projectName="ceph" targetName="unittest_rbd_mirror" />
      <config projectName="ceph" targetName="lightnvm_so" />
      <config projectName="ceph" targetName="erasure_code_objs" />
      <config projectName="ceph" targetName="rados_tp" />
      <config projectName="ceph" targetName="unittest_weighted_priority_queue" />
      <config projectName="ceph" targetName="unittest_addrs" />
      <config projectName="ceph" targetName="ceph_test_rados_api_misc" />
      <config projectName="ceph" targetName="unittest_prioritized_queue" />
      <config projectName="ceph" targetName="librados" />
      <config projectName="ceph" targetName="unittest_mime" />
      <config projectName="ceph" targetName="unittest_librbd" />
      <config projectName="ceph" targetName="ceph_test_signal_handlers" />
      <config projectName="ceph" targetName="erasure_code" />
      <config projectName="ceph" targetName="cls_statelog_client" />
      <config projectName="ceph" targetName="radosstriper" />
      <config projectName="ceph" targetName="cls_log" />
      <config projectName="ceph" targetName="Boost" />
      <config projectName="ceph" targetName="unittest_gather" />
      <config projectName="ceph" targetName="cython_modules" />
      <config projectName="ceph" targetName="ceph-objectstore-tool" />
      <config projectName="ceph" targetName="ceph-mds" />
      <config projectName="ceph" targetName="rbd_mirror_test" />
      <config projectName="ceph" targetName="unittest_context" />
      <config projectName="ceph" targetName="ceph_objectstore_bench" />
      <config projectName="ceph" targetName="ceph_test_filestore_idempotent_sequence" />
      <config projectName="ceph" targetName="crushtool" />
      <config projectName="ceph" targetName="cls_replica_log_client" />
      <config projectName="ceph" targetName="cls_lock" />
      <config projectName="ceph" targetName="ceph_test_keyvaluedb" />
      <config projectName="ceph" targetName="ceph-mon" />
      <config projectName="ceph" targetName="ceph_lz4" />
      <config projectName="ceph" targetName="ceph_test_rados_delete_pools_parallel" />
      <config projectName="ceph" targetName="rgw_op_tp" />
      <config projectName="ceph" targetName="ceph_test_object_map" />
      <config projectName="ceph" targetName="rbd-fuse" />
      <config projectName="ceph" targetName="rgw_rados_tp" />
      <config projectName="ceph" targetName="unit-main" />
      <config projectName="ceph" targetName="unittest_run_cmd" />
      <config projectName="ceph" targetName="unittest_journal" />
      <config projectName="ceph" targetName="ceph_test_rados_api_io" />
      <config projectName="ceph" targetName="rbd-nbd" />
      <config projectName="ceph" targetName="cls_lock_client" />
      <config projectName="ceph" targetName="unittest_striper" />
      <config projectName="ceph" targetName="unittest_crypto" />
      <config projectName="ceph" targetName="ceph_test_msgr" />
      <config projectName="ceph" targetName="compressor_objs" />
      <config projectName="ceph" targetName="unittest_ecbackend" />
      <config projectName="ceph" targetName="global-static" />
      <config projectName="ceph" targetName="simple_server" />
      <config projectName="ceph" targetName="cls_timeindex_client" />
      <config projectName="ceph" targetName="unittest_bit_alloc" />
      <config projectName="ceph" targetName="common_mountcephfs_objs" />
      <config projectName="ceph" targetName="ceph_test_objectstore" />
      <config projectName="ceph" targetName="cls_journal_client" />
      <config projectName="ceph" targetName="cls_otp" />
      <config projectName="ceph" targetName="librbd" />
      <config projectName="ceph" targetName="libradostest_obj" />
      <config projectName="ceph" targetName="unittest_crush_wrapper" />
      <config projectName="ceph" targetName="unittest_histogram" />
      <config projectName="ceph" targetName="unittest_crc32c" />
      <config projectName="ceph" targetName="unittest_base64" />
      <config projectName="ceph" targetName="global" />
      <config projectName="ceph" targetName="unittest_escape" />
      <config projectName="ceph" targetName="liblua" />
      <config projectName="ceph" targetName="ceph_bench_log" />
      <config projectName="ceph" targetName="mgr-dashboard-test-venv" />
      <config projectName="ceph" targetName="eventtrace-tp" />
      <config projectName="ceph" targetName="ceph_erasure_code_non_regression" />
      <config projectName="ceph" targetName="unittest_mclock_client_queue" />
      <config projectName="ceph" targetName="ceph_perf_msgr_server" />
      <config projectName="ceph" targetName="cls_log_client" />
      <config projectName="ceph" targetName="cls_journal" />
      <config projectName="ceph" targetName="ceph_test_cls_version" />
      <config projectName="ceph" targetName="unittest_signals" />
      <config projectName="ceph" targetName="ceph_test_cfuse_cache_invalidate" />
      <config projectName="ceph" targetName="dmclock" />
      <config projectName="ceph" targetName="unittest_crush" />
      <config projectName="ceph" targetName="rbd_test" />
      <config projectName="ceph" targetName="ctags" />
      <config projectName="ceph" targetName="ceph_test_mon_msg" />
      <config projectName="ceph" targetName="cephfs" />
      <config projectName="ceph" targetName="cython_rbd" />
      <config projectName="ceph" targetName="ec_isa" />
      <config projectName="ceph" targetName="unittest_mds_types" />
      <config projectName="ceph" targetName="ceph_multi_stress_watch" />
      <config projectName="ceph" targetName="ceph_test_rados_striper_api_aio" />
      <config projectName="ceph" targetName="unittest_alloc" />
      <config projectName="ceph" targetName="unittest_interval_set" />
      <config projectName="ceph" targetName="librados_api_obj" />
      <config projectName="ceph" targetName="unittest_erasure_code_shec_arguments" />
      <config projectName="ceph" targetName="ceph_test_async_networkstack" />
      <config projectName="ceph" targetName="unittest_hobject" />
      <config projectName="ceph" targetName="ceph_psim" />
      <config projectName="ceph" targetName="unittest_utf8" />
      <config projectName="ceph" targetName="ceph_test_admin_socket_output" />
      <config projectName="ceph" targetName="ceph_test_cls_log" />
      <config projectName="ceph" targetName="ceph-disk" />
      <config projectName="ceph" targetName="unittest_subprocess" />
      <config projectName="ceph" targetName="unittest_mutex_debug" />
      <config projectName="ceph" targetName="ceph_test_rados_api_snapshots" />
      <config projectName="ceph" targetName="unittest_readahead" />
      <config projectName="ceph" targetName="monmaptool" />
      <config projectName="ceph" targetName="unittest_str_map" />
      <config projectName="ceph" targetName="os" />
      <config projectName="ceph" targetName="ceph-osdomap-tool" />
      <config projectName="ceph" targetName="heap_profiler_objs" />
      <config projectName="ceph" targetName="client" />
      <config projectName="ceph" targetName="unittest_erasure_code_isa" />
      <config projectName="ceph" targetName="unittest_denc" />
      <config projectName="ceph" targetName="journal" />
      <config projectName="ceph" targetName="ceph_test_cls_rbd" />
      <config projectName="ceph" targetName="ceph_test_cls_numops" />
      <config projectName="ceph" targetName="rados_test_stub" />
      <config projectName="ceph" targetName="cephfs-journal-tool" />
      <config projectName="ceph" targetName="gmock" />
      <config projectName="ceph" targetName="rbd-mirror" />
      <config projectName="ceph" targetName="cephfs_testing" />
      <config projectName="ceph" targetName="ec_fail_to_initialize" />
      <config projectName="ceph" targetName="ceph_test_cls_journal" />
      <config projectName="ceph" targetName="unittest_throttle" />
      <config projectName="ceph" targetName="unittest_direct_messenger" />
      <config projectName="ceph" targetName="unittest_ec_transaction" />
      <config projectName="ceph" targetName="rbd" />
      <config projectName="ceph" targetName="unittest_libcephfs_config" />
      <config projectName="ceph" targetName="radostest" />
      <config projectName="ceph" targetName="ceph_disk-clone" />
      <config projectName="ceph" targetName="ceph_test_stress_watch" />
      <config projectName="ceph" targetName="unittest_mon_pgmap" />
      <config projectName="ceph" targetName="ceph_test_rados_striper_api_io" />
      <config projectName="ceph" targetName="compressor_plugins" />
      <config projectName="ceph" targetName="mds" />
      <config projectName="ceph" targetName="cls_numops" />
      <config projectName="ceph" targetName="ceph_kvstorebench" />
      <config projectName="ceph" targetName="ceph_test_filestore_idempotent" />
      <config projectName="ceph" targetName="rbd_tp" />
      <config projectName="ceph" targetName="test_c_headers" />
      <config projectName="ceph" targetName="ceph_perf_local" />
      <config projectName="ceph" targetName="unittest_ceph_argparse" />
      <config projectName="ceph" targetName="ceph_test_rados_striper_api_striping" />
      <config projectName="ceph" targetName="ec_jerasure" />
      <config projectName="ceph" targetName="store_test_fixture" />
      <config projectName="ceph" targetName="ceph_test_async_driver" />
      <config projectName="ceph" targetName="rados_snap_set_diff_obj" />
      <config projectName="ceph" targetName="unittest_config" />
      <config projectName="ceph" targetName="ceph-authtool" />
      <config projectName="ceph" targetName="unittest_on_exit" />
      <config projectName="ceph" targetName="kv_objs" />
      <config projectName="ceph" targetName="ceph_snappy" />
      <config projectName="ceph" targetName="osd-tp" />
      <config projectName="ceph" targetName="ceph_test_rados_api_cmd" />
      <config projectName="ceph" targetName="librados-tp" />
      <config projectName="ceph" targetName="uninstall" />
      <config projectName="ceph" targetName="json_spirit" />
      <config projectName="ceph" targetName="ceph_test_rados_api_cls" />
      <config projectName="ceph" targetName="erasure_code_plugins" />
      <config projectName="ceph" targetName="rbd_replay" />
      <config projectName="ceph" targetName="unittest_librados" />
      <config projectName="ceph" targetName="cls_refcount" />
      <config projectName="ceph" targetName="unittest_mon_moncap" />
      <config projectName="ceph" targetName="ceph_test_rados_api_watch_notify" />
      <config projectName="ceph" targetName="unittest_features" />
      <config projectName="ceph" targetName="cls_numops_client" />
      <config projectName="ceph" targetName="jerasure_utils" />
      <config projectName="ceph" targetName="unittest_osd_osdcap" />
      <config projectName="ceph" targetName="unittest_compression" />
      <config projectName="ceph" targetName="unittest_rocksdb_option" />
      <config projectName="ceph" targetName="cls_lua" />
      <config projectName="ceph" targetName="unittest_erasure_code_jerasure" />
      <config projectName="ceph" targetName="unittest_chain_xattr" />
      <config projectName="ceph" targetName="unittest_confutils" />
      <config projectName="ceph" targetName="ceph_detect_init-clone" />
      <config projectName="ceph" targetName="common_utf8" />
      <config projectName="ceph" targetName="ec_shec" />
      <config projectName="ceph" targetName="unittest_strtol" />
      <config projectName="ceph" targetName="cyg_profile-tp" />
      <config projectName="ceph" targetName="unittest_osdmap" />
      <config projectName="ceph" targetName="manpages" />
      <config projectName="ceph" targetName="ceph-conf" />
      <config projectName="ceph" targetName="oprequest-tp" />
      <config projectName="ceph" targetName="vstart-base" />
      <config projectName="ceph" targetName="unittest_erasure_code_plugin_isa" />
      <config projectName="ceph" targetName="crush_objs" />
      <config projectName="ceph" targetName="unittest_erasure_code_plugin_shec" />
      <config projectName="ceph" targetName="unittest_bloom_filter" />
      <config projectName="ceph" targetName="global_common_objs" />
      <config projectName="ceph" targetName="simple_client" />
      <config projectName="ceph" targetName="isal_crypto_plugin_objs" />
      <config projectName="ceph" targetName="pg-tp" />
      <config projectName="ceph" targetName="test_build_librados" />
      <config projectName="ceph" targetName="tags" />
      <config projectName="ceph" targetName="unittest_memstore_clone" />
      <config projectName="ceph" targetName="unittest_arch" />
      <config projectName="ceph" targetName="rbd_replay_types" />
      <config projectName="ceph" targetName="parse_secret_objs" />
      <config projectName="ceph" targetName="rbd_replay_ios" />
      <config projectName="ceph" targetName="unittest_erasure_code_plugin" />
      <config projectName="ceph" targetName="unittest_daemon_config" />
      <config projectName="ceph" targetName="unittest_heartbeatmap" />
      <config projectName="ceph" targetName="ceph_crypto_isal" />
      <config projectName="ceph" targetName="osdc" />
      <config projectName="ceph" targetName="unittest_io_priority" />
      <config projectName="ceph" targetName="ceph_test_rados_api_asio" />
      <config projectName="ceph" targetName="jerasure_objs" />
      <config projectName="ceph" targetName="cls_version_client" />
      <config projectName="ceph" targetName="rbd_mirror_types" />
      <config projectName="ceph" targetName="ceph_test_keys" />
      <config projectName="ceph" targetName="ceph_scratchtool" />
      <config projectName="ceph" targetName="cython_rados" />
      <config projectName="ceph" targetName="cls_cephfs" />
      <config projectName="ceph" targetName="cls_statelog" />
      <config projectName="ceph" targetName="ceph_test_librbd" />
      <config projectName="ceph" targetName="unittest_mutex" />
      <config projectName="ceph" targetName="ec_missing_version" />
      <config projectName="ceph" targetName="ceph_test_get_blkdev_size" />
      <config projectName="ceph" targetName="ec_jerasure_generic" />
      <config projectName="ceph" targetName="tracepoint_libraries" />
      <config projectName="ceph" targetName="common_buffer_obj" />
      <config projectName="ceph" targetName="unittest_erasure_code_plugin_jerasure" />
      <config projectName="ceph" targetName="ceph_test_rados_api_c_write_operations" />
      <config projectName="ceph" targetName="cls_otp_client" />
      <config projectName="ceph" targetName="librbd-tp" />
      <config projectName="ceph" targetName="ceph_perf_objectstore" />
      <config projectName="ceph" targetName="cython_cephfs" />
      <config projectName="ceph" targetName="ceph-dencoder" />
      <config projectName="ceph" targetName="unittest_rbd_replay" />
      <config projectName="ceph" targetName="unittest_convenience" />
      <config projectName="ceph" targetName="ceph-syn" />
      <config projectName="ceph" targetName="unittest_erasure_code_plugin_lrc" />
      <config projectName="ceph" targetName="ceph-osd" />
      <config projectName="ceph" targetName="ceph-fuse" />
      <config projectName="ceph" targetName="cephfs-data-scan" />
      <config projectName="ceph" targetName="objectstore-tp" />
      <config projectName="ceph" targetName="ceph_test_keyvaluedb_iterators" />
      <config projectName="ceph" targetName="ceph_test_rados_api_lock" />
      <config projectName="ceph" targetName="test_crypto" />
      <config projectName="ceph" targetName="unittest_back_trace" />
      <config projectName="ceph" targetName="unittest_osd_types" />
      <config projectName="ceph" targetName="ceph_volume-clone" />
      <config projectName="ceph" targetName="unittest_global_doublefree" />
      <config projectName="ceph" targetName="ec_hangs" />
      <config projectName="ceph" targetName="ec_shec_sse4" />
      <config projectName="ceph" targetName="ec_shec_sse3" />
      <config projectName="ceph" targetName="librados_objs" />
      <config projectName="ceph" targetName="unittest_ceph_compatset" />
      <config projectName="ceph" targetName="unittest_static_ptr" />
      <config projectName="ceph" targetName="ceph_test_timers" />
      <config projectName="ceph" targetName="unittest_url_escape" />
      <config projectName="ceph" targetName="ceph_radosacl" />
      <config projectName="ceph" targetName="unittest_random" />
      <config projectName="ceph" targetName="unittest_mds_authcap" />
      <config projectName="ceph" targetName="unittest_dns_resolve" />
      <config projectName="ceph" targetName="ceph_test_objectcacher_stress" />
    </generated>
  </component>
  <component name="CMakeSettings">
    <configurations>
      <configuration PROFILE_NAME="CEPH" CONFIG_NAME="RelWithDebInfo" GENERATION_OPTIONS="-DWITH_OCSSD=ON -DWITH_MGR_DASHBOARD_FRONTEND=OFF -DWITH_RADOSGW=OFF -DWITH_SPDK=OFF" GENERATION_DIR="clion-build" BUILD_OPTIONS="-j 24" />
    </configurations>
  </component>
  <component name="ChangeListManager">
    <list default="true" id="fb239463-a751-42ca-86b4-d39acf30ba4a" name="Default Changelist" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/boost/b2" beforeDir="false" afterPath="$PROJECT_DIR$/src/boost/b2" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/boost/bjam" beforeDir="false" afterPath="$PROJECT_DIR$/src/boost/bjam" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/boost/tools/build/src/engine/bin.linuxx86_64/b2" beforeDir="false" afterPath="$PROJECT_DIR$/src/boost/tools/build/src/engine/bin.linuxx86_64/b2" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/boost/tools/build/src/engine/bin.linuxx86_64/bjam" beforeDir="false" afterPath="$PROJECT_DIR$/src/boost/tools/build/src/engine/bin.linuxx86_64/bjam" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/boost/tools/build/src/engine/bootstrap/jam0" beforeDir="false" afterPath="$PROJECT_DIR$/src/boost/tools/build/src/engine/bootstrap/jam0" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/libocssd/objssd-nvme.c" beforeDir="false" afterPath="$PROJECT_DIR$/src/libocssd/objssd-nvme.c" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/libocssd/objssd-nvme.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/libocssd/objssd-nvme.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/os/bluestore/OCDevice.cc" beforeDir="false" afterPath="$PROJECT_DIR$/src/os/bluestore/OCDevice.cc" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/os/bluestore/OCDevice.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/os/bluestore/OCDevice.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/test/objectstore/demo.cc" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/objectstore/demo.cc" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/vstart.sh" beforeDir="false" afterPath="$PROJECT_DIR$/src/vstart.sh" afterDir="false" />
    </list>
    <ignored path="$PROJECT_DIR$/cmake-build-debug/" />
    <ignored path="$PROJECT_DIR$/clion-build/" />
    <ignored path="$PROJECT_DIR$/src/os/bluestore/libocssd/cli/CMakeFiles/" />
    <ignored path="$PROJECT_DIR$/src/os/bluestore/libocssd/tests/CMakeFiles/" />
    <ignored path="$PROJECT_DIR$/src/libocssd/tests/CMakeFiles/" />
    <ignored path="$PROJECT_DIR$/src/libocssd/cli/CMakeFiles/" />
    <ignored path="$PROJECT_DIR$/src/libocssd/CMakeFiles/" />
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExecutionTargetManager" SELECTED_TARGET="CMakeBuildProfile:CEPH" />
  <component name="FUSProjectUsageTrigger">
    <session id="-1743232959">
      <usages-collector id="statistics.lifecycle.project">
        <counts>
          <entry key="project.closed" value="21" />
          <entry key="project.open.time.0" value="1" />
          <entry key="project.open.time.1" value="2" />
          <entry key="project.open.time.12" value="1" />
          <entry key="project.open.time.14" value="1" />
          <entry key="project.open.time.16" value="1" />
          <entry key="project.open.time.17" value="1" />
          <entry key="project.open.time.21" value="1" />
          <entry key="project.open.time.22" value="1" />
          <entry key="project.open.time.24" value="1" />
          <entry key="project.open.time.28" value="1" />
          <entry key="project.open.time.5" value="1" />
          <entry key="project.open.time.6" value="17" />
          <entry key="project.open.time.7" value="11" />
          <entry key="project.open.time.8" value="3" />
          <entry key="project.opened" value="43" />
        </counts>
      </usages-collector>
      <usages-collector id="statistics.file.extensions.edit">
        <counts>
          <entry key="cc" value="22322" />
          <entry key="cpp" value="43" />
          <entry key="gitignore" value="3" />
          <entry key="h" value="15716" />
          <entry key="sh" value="628" />
          <entry key="txt" value="1578" />
        </counts>
      </usages-collector>
      <usages-collector id="statistics.file.types.edit">
        <counts>
          <entry key="Bash" value="628" />
          <entry key="CMakeLists.txt" value="1578" />
          <entry key="Doxygen file" value="3" />
          <entry key="ObjectiveC" value="38078" />
          <entry key="PLAIN_TEXT" value="3" />
        </counts>
      </usages-collector>
      <usages-collector id="statistics.file.extensions.open">
        <counts>
          <entry key="c" value="5" />
          <entry key="cc" value="48" />
          <entry key="cpp" value="2" />
          <entry key="gitignore" value="2" />
          <entry key="h" value="44" />
          <entry key="py" value="2" />
          <entry key="sh" value="5" />
          <entry key="txt" value="26" />
          <entry key="yaml" value="1" />
        </counts>
      </usages-collector>
      <usages-collector id="statistics.file.types.open">
        <counts>
          <entry key="Bash" value="5" />
          <entry key="CMakeLists.txt" value="26" />
          <entry key="ObjectiveC" value="99" />
          <entry key="PLAIN_TEXT" value="2" />
          <entry key="Python" value="2" />
          <entry key="YAML" value="1" />
        </counts>
      </usages-collector>
    </session>
  </component>
  <component name="FileEditorManager">
    <leaf SIDE_TABS_SIZE_LIMIT_KEY="300">
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/os/bluestore/OCDevice.h">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="382">
              <caret line="99" column="103" selection-start-line="99" selection-start-column="103" selection-end-line="99" selection-end-column="103" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/os/bluestore/OCDevice.cc">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="375">
              <caret line="103" column="49" selection-start-line="103" selection-start-column="45" selection-end-line="103" selection-end-column="49" />
              <folding>
                <element signature="e#465#1411#0" />
                <element signature="e#1413#1585#0" />
                <element signature="e#1700#1863#0" />
              </folding>
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/os/bluestore/BlueStore.h">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="601">
              <caret line="157" column="6" selection-start-line="157" selection-start-column="6" selection-end-line="157" selection-end-column="6" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="true">
        <entry file="file://$PROJECT_DIR$/src/test/objectstore/demo.cc">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="456">
              <caret line="24" lean-forward="true" selection-start-line="24" selection-end-line="24" />
              <folding>
                <element signature="e#90#107#0" expanded="true" />
              </folding>
            </state>
          </provider>
        </entry>
      </file>
    </leaf>
  </component>
  <component name="FindInProjectRecents">
    <findStrings>
      <find>_do_write_data</find>
      <find>write_big</find>
      <find>do_wr</find>
      <find>do_writ</find>
      <find>CSUM</find>
      <find>do_write</find>
      <find>_do_read</find>
      <find>zero</find>
      <find>bluestore_blob</find>
      <find>s</find>
      <find>mkdir</find>
      <find>deferred_seq</find>
      <find>bluefs_min</find>
      <find>bluestore_bluefs_gift_ratio</find>
      <find>bluefs_extents</find>
      <find>is empty!!!</find>
      <find>ocssd</find>
      <find>set</find>
      <find>ocssd_do</find>
      <find>l_</find>
      <find>OCSSD</find>
      <find>std::hex</find>
      <find>osd.</find>
      <find>WITH_OCSSD</find>
      <find>Writing</find>
      <find>LINK_LIB</find>
      <find>WITH_OC</find>
      <find>add_sub</find>
    </findStrings>
  </component>
  <component name="Git.Settings">
    <option name="ROOT_SYNC" value="DONT_SYNC" />
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$PROJECT_DIR$/src/os/bluestore/BlueStore.cc" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/src/vstart.sh" root0="SKIP_INSPECTION" />
    <setting file="file://$PROJECT_DIR$/src/test/objectstore/demo.cc" root0="SKIP_INSPECTION" />
  </component>
  <component name="IdeDocumentHistory">
    <option name="CHANGED_PATHS">
      <list>
        <option value="$PROJECT_DIR$/src/test/objectstore/CMakeLists.txt" />
        <option value="$PROJECT_DIR$/qa/client/common.sh" />
        <option value="$PROJECT_DIR$/src/os/bluestore/BlockDevice.h" />
        <option value="$PROJECT_DIR$/src/os/bluestore/BitmapFreelistManager.cc" />
        <option value="$PROJECT_DIR$/src/os/bluestore/StupidAllocator.cc" />
        <option value="$PROJECT_DIR$/src/common/buffer.cc" />
        <option value="$PROJECT_DIR$/src/os/bluestore/BlueStore.h" />
        <option value="$PROJECT_DIR$/src/common/ceph_context.h" />
        <option value="$PROJECT_DIR$/src/os/bluestore/KernelDevice.cc" />
        <option value="$PROJECT_DIR$/src/os/bluestore/BlockDevice.cc" />
        <option value="$PROJECT_DIR$/src/vstart.sh" />
        <option value="$PROJECT_DIR$/src/os/bluestore/BlueStore.cc" />
        <option value="$PROJECT_DIR$/src/test/objectstore_bench.cc" />
        <option value="$PROJECT_DIR$/CMakeLists.txt" />
        <option value="$PROJECT_DIR$/src/common/legacy_config_opts.h" />
        <option value="$PROJECT_DIR$/src/common/options.cc" />
        <option value="$PROJECT_DIR$/do_cmake.sh" />
        <option value="$PROJECT_DIR$/src/os/bluestore/OCDevice.cc" />
        <option value="$PROJECT_DIR$/src/os/bluestore/libocssd/CMakeLists.txt" />
        <option value="$PROJECT_DIR$/src/CMakeLists.txt" />
        <option value="$PROJECT_DIR$/src/libocssd/main.cpp" />
        <option value="$PROJECT_DIR$/src/os/CMakeLists.txt" />
        <option value="$PROJECT_DIR$/src/libocssd/CMakeLists.txt" />
        <option value="$PROJECT_DIR$/.gitignore" />
        <option value="$PROJECT_DIR$/src/os/bluestore/OCDevice.h" />
        <option value="$PROJECT_DIR$/src/test/objectstore/demo.cc" />
      </list>
    </option>
  </component>
  <component name="JsBuildToolGruntFileManager" detection-done="true" sorting="DEFINITION_ORDER" />
  <component name="JsBuildToolPackageJson" detection-done="true" sorting="DEFINITION_ORDER" />
  <component name="JsGulpfileManager">
    <detection-done>true</detection-done>
    <sorting>DEFINITION_ORDER</sorting>
  </component>
  <component name="NodePackageJsonFileManager">
    <packageJsonPaths>
      <path value="$PROJECT_DIR$/src/civetweb/src/third_party/duktape-1.5.2/debugger/package.json" />
      <path value="$PROJECT_DIR$/src/civetweb/src/third_party/duktape-1.8.0/debugger/package.json" />
      <path value="$PROJECT_DIR$/src/pybind/mgr/dashboard/frontend/package.json" />
      <path value="$PROJECT_DIR$/src/rapidjson/package.json" />
    </packageJsonPaths>
  </component>
  <component name="OCFindUsagesOptions" text="true" ivars="false" properties="true" derivedClasses="false" />
  <component name="ProjectFrameBounds">
    <option name="y" value="28" />
    <option name="width" value="1920" />
    <option name="height" value="1018" />
  </component>
  <component name="ProjectInspectionProfilesVisibleTreeState">
    <entry key="Project Default">
      <profile-state>
        <expanded-state>
          <State />
        </expanded-state>
        <selected-state>
          <State>
            <id>C/C++</id>
          </State>
        </selected-state>
      </profile-state>
    </entry>
  </component>
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectView">
    <navigator proportions="" version="1">
      <foldersAlwaysOnTop value="true" />
    </navigator>
    <panes>
      <pane id="Scope" />
      <pane id="ProjectPane">
        <subPane>
          <expand>
            <path>
              <item name="ceph" type="b2602c69:ProjectViewProjectNode" />
              <item name="ceph-13.2.2" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="ceph" type="b2602c69:ProjectViewProjectNode" />
              <item name="ceph-13.2.2" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="ceph" type="b2602c69:ProjectViewProjectNode" />
              <item name="ceph-13.2.2" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="test" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="ceph" type="b2602c69:ProjectViewProjectNode" />
              <item name="ceph-13.2.2" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="test" type="462c0819:PsiDirectoryNode" />
              <item name="objectstore" type="462c0819:PsiDirectoryNode" />
            </path>
          </expand>
          <select />
        </subPane>
      </pane>
    </panes>
  </component>
  <component name="PropertiesComponent">
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="nodejs_interpreter_path.stuck_in_default_project" value="undefined stuck path" />
    <property name="nodejs_npm_path_reset_for_default_project" value="true" />
    <property name="settings.editor.selected.configurable" value="editor.preferences.fonts.default" />
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Application.Build All">
    <configuration name="ceph_perf_local" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_perf_local" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_perf_local" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_perf_msgr_client" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_perf_msgr_client" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_perf_msgr_client" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_perf_msgr_server" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_perf_msgr_server" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_perf_msgr_server" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_perf_objectstore" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_perf_objectstore" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_perf_objectstore" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_test_async_driver" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_test_async_driver" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_test_async_driver" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_test_async_networkstack" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_test_async_networkstack" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_test_async_networkstack" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_test_cls_hello" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_test_cls_hello" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_test_cls_hello" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_test_cls_journal" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_test_cls_journal" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_test_cls_journal" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_test_cls_lock" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_test_cls_lock" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_test_cls_lock" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_test_cls_log" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_test_cls_log" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_test_cls_log" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_test_cls_lua" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_test_cls_lua" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_test_cls_lua" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_test_cls_numops" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_test_cls_numops" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_test_cls_numops" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_test_cls_rbd" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_test_cls_rbd" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_test_cls_rbd" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_test_cls_refcount" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_test_cls_refcount" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_test_cls_refcount" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_test_cls_replica_log" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_test_cls_replica_log" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_test_cls_replica_log" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_test_cls_sdk" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_test_cls_sdk" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_test_cls_sdk" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_test_cls_statelog" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_test_cls_statelog" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_test_cls_statelog" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_test_cls_version" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_test_cls_version" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_test_cls_version" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_test_filejournal" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_test_filejournal" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_test_filejournal" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_test_filestore" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_test_filestore" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_test_filestore" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_test_keyvaluedb" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_test_keyvaluedb" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_test_keyvaluedb" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_test_keyvaluedb_atomicity" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_test_keyvaluedb_atomicity" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_test_keyvaluedb_atomicity" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_test_keyvaluedb_iterators" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_test_keyvaluedb_iterators" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_test_keyvaluedb_iterators" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_test_libcephfs" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_test_libcephfs" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_test_libcephfs" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_test_libcephfs_access" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_test_libcephfs_access" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_test_libcephfs_access" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_test_librbd" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_test_librbd" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_test_librbd" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_test_librbd_api" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_test_librbd_api" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_test_librbd_api" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_test_mon_msg" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_test_mon_msg" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_test_mon_msg" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_test_msgr" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_test_msgr" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_test_msgr" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_test_object_map" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_test_object_map" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_test_object_map" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_test_objectstore" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_test_objectstore" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_test_objectstore" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_test_rados_api_aio" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_test_rados_api_aio" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_test_rados_api_aio" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_test_rados_api_asio" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_test_rados_api_asio" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_test_rados_api_asio" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_test_rados_api_c_read_operations" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_test_rados_api_c_read_operations" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_test_rados_api_c_read_operations" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_test_rados_api_c_write_operations" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_test_rados_api_c_write_operations" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_test_rados_api_c_write_operations" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_test_rados_api_cls" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_test_rados_api_cls" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_test_rados_api_cls" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_test_rados_api_cmd" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_test_rados_api_cmd" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_test_rados_api_cmd" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_test_rados_api_io" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_test_rados_api_io" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_test_rados_api_io" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_test_rados_api_list" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_test_rados_api_list" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_test_rados_api_list" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_test_rados_api_lock" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_test_rados_api_lock" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_test_rados_api_lock" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_test_rados_api_misc" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_test_rados_api_misc" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_test_rados_api_misc" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_test_rados_api_pool" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_test_rados_api_pool" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_test_rados_api_pool" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_test_rados_api_service" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_test_rados_api_service" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_test_rados_api_service" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_test_rados_api_snapshots" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_test_rados_api_snapshots" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_test_rados_api_snapshots" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_test_rados_api_stat" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_test_rados_api_stat" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_test_rados_api_stat" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_test_rados_api_tier" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_test_rados_api_tier" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_test_rados_api_tier" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_test_rados_api_watch_notify" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_test_rados_api_watch_notify" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_test_rados_api_watch_notify" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_test_rados_striper_api_aio" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_test_rados_striper_api_aio" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_test_rados_striper_api_aio" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_test_rados_striper_api_io" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_test_rados_striper_api_io" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_test_rados_striper_api_io" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_test_rados_striper_api_striping" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_test_rados_striper_api_striping" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_test_rados_striper_api_striping" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_test_rbd_mirror" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_test_rbd_mirror" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_test_rbd_mirror" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_test_snap_mapper" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_test_snap_mapper" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_test_snap_mapper" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_test_stress_watch" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_test_stress_watch" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_test_stress_watch" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_addrs" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_addrs" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_addrs" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_admin_socket" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_admin_socket" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_admin_socket" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_alloc" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_alloc" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_alloc" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_any" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_any" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_any" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_arch" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_arch" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_arch" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_back_trace" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_back_trace" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_back_trace" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_base64" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_base64" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_base64" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_bit_alloc" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_bit_alloc" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_bit_alloc" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_bit_vector" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_bit_vector" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_bit_vector" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_blkdev" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_blkdev" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_blkdev" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_bloom_filter" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_bloom_filter" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_bloom_filter" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_bluefs" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_bluefs" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_bluefs" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_bluestore_types" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_bluestore_types" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_bluestore_types" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_bounded_key_counter" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_bounded_key_counter" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_bounded_key_counter" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_bufferlist" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_bufferlist" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_bufferlist" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_ceph_argparse" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_ceph_argparse" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_ceph_argparse" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_ceph_compatset" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_ceph_compatset" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_ceph_compatset" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_ceph_crypto" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_ceph_crypto" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_ceph_crypto" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_chain_xattr" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_chain_xattr" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_chain_xattr" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_compression" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_compression" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_compression" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_config" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_config" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_config" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_confutils" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_confutils" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_confutils" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_context" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_context" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_context" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_convenience" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_convenience" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_convenience" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_crc32c" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_crc32c" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_crc32c" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_crush" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_crush" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_crush" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_crush_wrapper" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_crush_wrapper" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_crush_wrapper" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_crypto" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_crypto" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_crypto" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_crypto_init" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_crypto_init" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_crypto_init" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_daemon_config" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_daemon_config" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_daemon_config" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_denc" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_denc" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_denc" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_direct_messenger" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_direct_messenger" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_direct_messenger" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_dns_resolve" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_dns_resolve" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_dns_resolve" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_ec_transaction" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_ec_transaction" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_ec_transaction" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_ecbackend" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_ecbackend" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_ecbackend" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_encoding" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_encoding" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_encoding" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_erasure_code" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_erasure_code" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_erasure_code" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_erasure_code_example" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_erasure_code_example" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_erasure_code_example" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_erasure_code_isa" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_erasure_code_isa" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_erasure_code_isa" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_erasure_code_jerasure" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_erasure_code_jerasure" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_erasure_code_jerasure" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_erasure_code_lrc" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_erasure_code_lrc" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_erasure_code_lrc" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_erasure_code_plugin" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_erasure_code_plugin" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_erasure_code_plugin" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_erasure_code_plugin_isa" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_erasure_code_plugin_isa" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_erasure_code_plugin_isa" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_erasure_code_plugin_jerasure" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_erasure_code_plugin_jerasure" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_erasure_code_plugin_jerasure" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_erasure_code_plugin_lrc" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_erasure_code_plugin_lrc" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_erasure_code_plugin_lrc" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_erasure_code_plugin_shec" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_erasure_code_plugin_shec" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_erasure_code_plugin_shec" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_erasure_code_shec" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_erasure_code_shec" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_erasure_code_shec" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_erasure_code_shec_all" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_erasure_code_shec_all" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_erasure_code_shec_all" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_erasure_code_shec_arguments" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_erasure_code_shec_arguments" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_erasure_code_shec_arguments" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_erasure_code_shec_thread" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_erasure_code_shec_thread" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_erasure_code_shec_thread" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_escape" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_escape" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_escape" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_extent_cache" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_extent_cache" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_extent_cache" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_features" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_features" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_features" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_gather" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_gather" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_gather" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_global_doublefree" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_global_doublefree" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_global_doublefree" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_heartbeatmap" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_heartbeatmap" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_heartbeatmap" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_histogram" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_histogram" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_histogram" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_hitset" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_hitset" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_hitset" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_hobject" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_hobject" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_hobject" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_hostname" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_hostname" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_hostname" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_interval_map" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_interval_map" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_interval_map" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_interval_set" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_interval_set" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_interval_set" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_io_priority" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_io_priority" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_io_priority" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_ipaddr" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_ipaddr" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_ipaddr" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_iso_8601" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_iso_8601" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_iso_8601" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_journal" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_journal" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_journal" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_json_formattable" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_json_formattable" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_json_formattable" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_lfnindex" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_lfnindex" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_lfnindex" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_libcephfs_config" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_libcephfs_config" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_libcephfs_config" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_librados" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_librados" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_librados" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_librados_config" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_librados_config" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_librados_config" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_librbd" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_librbd" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_librbd" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_log" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_log" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_log" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_lru" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_lru" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_lru" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_mclock_client_queue" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_mclock_client_queue" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_mclock_client_queue" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_mclock_op_class_queue" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_mclock_op_class_queue" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_mclock_op_class_queue" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_mclock_priority_queue" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_mclock_priority_queue" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_mclock_priority_queue" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_mds_authcap" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_mds_authcap" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_mds_authcap" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_mds_sessionfilter" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_mds_sessionfilter" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_mds_sessionfilter" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_mds_types" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_mds_types" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_mds_types" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_mempool" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_mempool" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_mempool" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_memstore_clone" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_memstore_clone" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_memstore_clone" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_mime" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_mime" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_mime" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_mon_moncap" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_mon_moncap" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_mon_moncap" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_mon_montypes" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_mon_montypes" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_mon_montypes" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_mon_pgmap" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_mon_pgmap" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_mon_pgmap" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_mutex" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_mutex" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_mutex" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_mutex_debug" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_mutex_debug" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_mutex_debug" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_on_exit" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_on_exit" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_on_exit" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_osd_osdcap" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_osd_osdcap" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_osd_osdcap" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_osd_types" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_osd_types" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_osd_types" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_osdmap" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_osdmap" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_osdmap" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_osdscrub" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_osdscrub" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_osdscrub" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_pageset" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_pageset" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_pageset" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_perf_counters" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_perf_counters" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_perf_counters" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_perf_histogram" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_perf_histogram" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_perf_histogram" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_pg_transaction" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_pg_transaction" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_pg_transaction" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_pglog" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_pglog" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_pglog" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_prebufferedstreambuf" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_prebufferedstreambuf" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_prebufferedstreambuf" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_prioritized_queue" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_prioritized_queue" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_prioritized_queue" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_random" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_random" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_random" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_rbd_mirror" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_rbd_mirror" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_rbd_mirror" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_rbd_replay" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_rbd_replay" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_rbd_replay" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_readahead" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_readahead" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_readahead" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_rocksdb_option" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_rocksdb_option" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_rocksdb_option" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_run_cmd" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_run_cmd" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_run_cmd" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_safe_io" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_safe_io" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_safe_io" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_shared_cache" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_shared_cache" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_shared_cache" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_sharedptr_registry" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_sharedptr_registry" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_sharedptr_registry" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_shunique_lock" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_shunique_lock" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_shunique_lock" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_signals" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_signals" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_signals" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_simple_spin" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_simple_spin" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_simple_spin" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_sloppy_crc_map" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_sloppy_crc_map" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_sloppy_crc_map" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_static_ptr" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_static_ptr" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_static_ptr" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_str_list" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_str_list" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_str_list" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_str_map" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_str_map" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_str_map" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_striper" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_striper" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_striper" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_strtol" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_strtol" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_strtol" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_subprocess" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_subprocess" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_subprocess" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_tableformatter" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_tableformatter" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_tableformatter" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_texttable" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_texttable" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_texttable" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_throttle" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_throttle" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_throttle" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_time" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_time" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_time" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_transaction" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_transaction" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_transaction" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_url_escape" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_url_escape" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_url_escape" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_utf8" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_utf8" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_utf8" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_util" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_util" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_util" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_weighted_priority_queue" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_weighted_priority_queue" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_weighted_priority_queue" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_workqueue" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_workqueue" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_workqueue" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_xlist" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_xlist" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_xlist" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unittest_xmlformatter" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unittest_xmlformatter" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="unittest_xmlformatter" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Boost" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="Boost" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Build All" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" CONFIG_NAME="CEPH" EXPLICIT_BUILD_TARGET_NAME="all">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph-authtool" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph-authtool" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph-authtool">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph-bluestore-tool" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph-bluestore-tool" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph-bluestore-tool">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph-client-debug" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph-client-debug" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph-client-debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph-common" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph-common" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph-conf" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph-conf" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph-conf">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph-dencoder" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph-dencoder" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph-dencoder">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph-detect-init" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph-detect-init" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph-disk" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph-disk" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph-fuse" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph-fuse" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph-fuse">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph-kvstore-tool" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph-kvstore-tool" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph-kvstore-tool">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph-mds" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph-mds" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph-mds">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph-mgr" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph-mgr" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph-mgr">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph-mon" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph-mon" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph-mon">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph-monstore-tool" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph-monstore-tool" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph-monstore-tool">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph-objectstore-tool" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph-objectstore-tool" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph-objectstore-tool">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph-osd" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph-osd" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph-osd">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph-osdomap-tool" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph-osdomap-tool" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph-osdomap-tool">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph-syn" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph-syn" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph-syn">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_bench_log" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_bench_log" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_bench_log">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_crypto_isal" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_crypto_isal" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_detect_init-clone" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_detect_init-clone" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_disk-clone" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_disk-clone" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_erasure_code" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_erasure_code" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_erasure_code">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_erasure_code_benchmark" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_erasure_code_benchmark" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_erasure_code_benchmark">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_erasure_code_non_regression" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_erasure_code_non_regression" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_erasure_code_non_regression">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_example" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_example" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_kvstorebench" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_kvstorebench" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_kvstorebench">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_lz4" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_lz4" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_multi_stress_watch" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_multi_stress_watch" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_multi_stress_watch">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_objectstore_bench" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_objectstore_bench" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_objectstore_bench">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_omapbench" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_omapbench" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_omapbench">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_psim" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_psim" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_psim">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_radosacl" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_radosacl" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_radosacl">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_scratchtool" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_scratchtool" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_scratchtool">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_scratchtoolpp" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_scratchtoolpp" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_scratchtoolpp">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_snappy" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_snappy" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_test_admin_socket_output" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_test_admin_socket_output" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_test_admin_socket_output">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_test_cfuse_cache_invalidate" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_test_cfuse_cache_invalidate" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_test_cfuse_cache_invalidate">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_test_filestore_idempotent" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_test_filestore_idempotent" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_test_filestore_idempotent">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_test_filestore_idempotent_sequence" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_test_filestore_idempotent_sequence" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_test_filestore_idempotent_sequence">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_test_get_blkdev_size" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_test_get_blkdev_size" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_test_get_blkdev_size">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_test_keys" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_test_keys" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_test_keys">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_test_librbd_fsx" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_test_librbd_fsx" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_test_librbd_fsx">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_test_mon_workloadgen" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_test_mon_workloadgen" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_test_mon_workloadgen">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_test_mutate" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_test_mutate" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_test_mutate">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_test_objectcacher_stress" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_test_objectcacher_stress" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_test_objectcacher_stress">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_test_rados" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_test_rados" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_test_rados">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_test_rados_delete_pools_parallel" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_test_rados_delete_pools_parallel" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_test_rados_delete_pools_parallel">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_test_rados_list_parallel" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_test_rados_list_parallel" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_test_rados_list_parallel">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_test_rados_open_pools_parallel" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_test_rados_open_pools_parallel" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_test_rados_open_pools_parallel">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_test_rados_watch_notify" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_test_rados_watch_notify" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_test_rados_watch_notify">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_test_rbd_mirror_random_write" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_test_rbd_mirror_random_write" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_test_rbd_mirror_random_write">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_test_rewrite_latency" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_test_rewrite_latency" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_test_rewrite_latency">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_test_signal_handlers" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_test_signal_handlers" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_test_signal_handlers">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_test_timers" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_test_timers" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="ceph_test_timers">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_volume-clone" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_volume-clone" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_zlib" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_zlib" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ceph_zstd" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ceph_zstd" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="cephfs-data-scan" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="cephfs-data-scan" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="cephfs-data-scan">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="cephfs-journal-tool" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="cephfs-journal-tool" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="cephfs-journal-tool">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="cephfs-table-tool" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="cephfs-table-tool" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="cephfs-table-tool">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="cephfs" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="cephfs" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="cephfs_testing" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="cephfs_testing" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="check" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="client" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="client" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="cls_cephfs" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="cls_cephfs" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="cls_cephfs_client" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="cls_cephfs_client" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="cls_hello" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="cls_hello" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="cls_journal" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="cls_journal" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="cls_journal_client" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="cls_journal_client" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="cls_kvs" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="cls_kvs" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="cls_lock" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="cls_lock" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="cls_lock_client" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="cls_lock_client" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="cls_log" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="cls_log" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="cls_log_client" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="cls_log_client" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="cls_lua" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="cls_lua" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="cls_lua_client" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="cls_lua_client" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="cls_numops" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="cls_numops" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="cls_numops_client" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="cls_numops_client" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="cls_otp" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="cls_otp" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="cls_otp_client" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="cls_otp_client" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="cls_rbd" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="cls_rbd" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="cls_rbd_client" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="cls_rbd_client" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="cls_refcount" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="cls_refcount" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="cls_refcount_client" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="cls_refcount_client" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="cls_references_objs" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="cls_references_objs" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="cls_replica_log" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="cls_replica_log" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="cls_replica_log_client" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="cls_replica_log_client" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="cls_sdk" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="cls_sdk" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="cls_statelog" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="cls_statelog" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="cls_statelog_client" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="cls_statelog_client" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="cls_timeindex" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="cls_timeindex" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="cls_timeindex_client" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="cls_timeindex_client" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="cls_user" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="cls_user" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="cls_user_client" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="cls_user_client" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="cls_version" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="cls_version" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="cls_version_client" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="cls_version_client" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="common-objs" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="common-objs" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="common" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="common" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="common_buffer_obj" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="common_buffer_obj" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="common_mountcephfs_objs" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="common_mountcephfs_objs" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="common_texttable_obj" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="common_texttable_obj" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="common_utf8" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="common_utf8" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="compressor_objs" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="compressor_objs" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="compressor_plugins" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="compressor_plugins" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="crush_objs" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="crush_objs" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="crushtool" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="crushtool" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="crushtool">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="crypto_plugins" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="crypto_plugins" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ctags" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ctags" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="cyg_profile-tp" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="cyg_profile-tp" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="cython_cephfs" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="cython_cephfs" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="cython_modules" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="cython_modules" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="cython_rados" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="cython_rados" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="cython_rbd" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="cython_rbd" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="demo" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="demo" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="demo">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="dmclock" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="dmclock" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ec_example" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ec_example" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ec_fail_to_initialize" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ec_fail_to_initialize" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ec_fail_to_register" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ec_fail_to_register" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ec_hangs" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ec_hangs" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ec_isa" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ec_isa" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ec_jerasure" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ec_jerasure" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ec_jerasure_generic" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ec_jerasure_generic" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ec_jerasure_sse3" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ec_jerasure_sse3" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ec_jerasure_sse4" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ec_jerasure_sse4" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ec_lrc" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ec_lrc" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ec_missing_entry_point" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ec_missing_entry_point" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ec_missing_version" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ec_missing_version" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ec_shec" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ec_shec" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ec_shec_generic" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ec_shec_generic" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ec_shec_sse3" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ec_shec_sse3" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ec_shec_sse4" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="ec_shec_sse4" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="erasure_code" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="erasure_code" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="erasure_code_objs" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="erasure_code_objs" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="erasure_code_plugins" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="erasure_code_plugins" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="eventtrace-tp" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="eventtrace-tp" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="get_command_descriptions" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="get_command_descriptions" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="get_command_descriptions">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="gf-complete_objs" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="gf-complete_objs" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="git-update" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="git-update" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="global-static" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="global-static" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="global" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="global" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="global_common_objs" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="global_common_objs" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="gmock" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="gmock" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="gmock_main" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="gmock_main" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="gtest" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="gtest" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="gtest_main" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="gtest_main" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="heap_profiler_objs" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="heap_profiler_objs" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="isal_crypto_plugin_objs" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="isal_crypto_plugin_objs" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="jerasure_objs" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="jerasure_objs" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="jerasure_utils" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="jerasure_utils" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="journal" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="journal" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="journal_test_mock" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="journal_test_mock" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="json_spirit" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="json_spirit" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="krbd" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="krbd" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="kv" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="kv" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="kv_objs" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="kv_objs" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="libglobal_objs" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="libglobal_objs" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="liblua" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="liblua" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="librados-config" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="librados-config" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="librados-config">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="librados-tp" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="librados-tp" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="librados" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="librados" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="librados_api_obj" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="librados_api_obj" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="librados_objs" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="librados_objs" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="libradostest_obj" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="libradostest_obj" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="librbd-tp" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="librbd-tp" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="librbd" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="librbd" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="lightnvm" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="lightnvm" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="lightnvm_so" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="lightnvm_so" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="manpages" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="manpages" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="mds" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="mds" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="mgr-dashboard-test-venv" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="mgr-dashboard-test-venv" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="mon" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="mon" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="monmaptool" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="monmaptool" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="monmaptool">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="mount.ceph" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="mount.ceph" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="mount.ceph">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="objectstore-tp" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="objectstore-tp" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="oprequest-tp" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="oprequest-tp" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="os" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="os" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="os_tp" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="os_tp" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="osd-tp" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="osd-tp" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="osd" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="osd" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="osd_tp" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="osd_tp" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="osdc" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="osdc" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="osdmaptool" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="osdmaptool" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="osdmaptool">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="parse_secret_objs" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="parse_secret_objs" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="pg-tp" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="pg-tp" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="rados" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="rados" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="rados">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="rados_snap_set_diff_obj" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="rados_snap_set_diff_obj" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="rados_striper_test" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="rados_striper_test" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="rados_test_stub" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="rados_test_stub" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="rados_tp" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="rados_tp" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="radosstriper" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="radosstriper" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="radostest" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="radostest" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="rbd-fuse" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="rbd-fuse" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="rbd-fuse">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="rbd-mirror" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="rbd-mirror" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="rbd-mirror">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="rbd-nbd" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="rbd-nbd" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="rbd-nbd">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="rbd-replay-prep" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="rbd-replay-prep" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="rbd-replay-prep">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="rbd-replay" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="rbd-replay" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="rbd-replay">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="rbd" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="rbd" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="rbd">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="rbd_api" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="rbd_api" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="rbd_internal" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="rbd_internal" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="rbd_mirror_internal" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="rbd_mirror_internal" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="rbd_mirror_test" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="rbd_mirror_test" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="rbd_mirror_types" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="rbd_mirror_types" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="rbd_replay" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="rbd_replay" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="rbd_replay_ios" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="rbd_replay_ios" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="rbd_replay_types" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="rbd_replay_types" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="rbd_test" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="rbd_test" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="rbd_test_mock" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="rbd_test_mock" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="rbd_tp" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="rbd_tp" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="rbd_types" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="rbd_types" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="rgw_op-tp" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="rgw_op-tp" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="rgw_op_tp" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="rgw_op_tp" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="rgw_rados-tp" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="rgw_rados-tp" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="rgw_rados_tp" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="rgw_rados_tp" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="rocksdb_ext" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="rocksdb_ext" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="shec_utils" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="shec_utils" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="simple_client" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="simple_client" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="simple_client">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="simple_server" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="simple_server" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="simple_server">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="store_test_fixture" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="store_test_fixture" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="systest" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="systest" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="tags" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="tags" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="test_build_libcephfs" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="test_build_libcephfs" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="test_build_libcephfs">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="test_build_libcommon" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="test_build_libcommon" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="test_build_libcommon">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="test_build_librados" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="test_build_librados" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="test_build_librados">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="test_c_headers" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="test_c_headers" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="test_c_headers">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="test_crypto" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="test_crypto" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="test_crypto">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="test_trans" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="test_trans" CONFIG_NAME="CEPH" RUN_TARGET_PROJECT_NAME="ceph" RUN_TARGET_NAME="test_trans">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="tests" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="tests" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="tracepoint_libraries" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="tracepoint_libraries" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="uninstall" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="uninstall" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="unit-main" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="unit-main" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="vstart-base" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="vstart-base" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="vstart" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="vstart" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="zstd_ext" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ceph" TARGET_NAME="zstd_ext" CONFIG_NAME="CEPH">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <list>
      <item itemvalue="Application.Build All" />
      <item itemvalue="Application.Boost" />
      <item itemvalue="Application.check" />
      <item itemvalue="Application.ctags" />
      <item itemvalue="Application.tags" />
      <item itemvalue="Application.tests" />
      <item itemvalue="Application.manpages" />
      <item itemvalue="Application.ceph-common" />
      <item itemvalue="Application.ceph-dencoder" />
      <item itemvalue="Application.ceph-fuse" />
      <item itemvalue="Application.ceph-mds" />
      <item itemvalue="Application.ceph-mgr" />
      <item itemvalue="Application.ceph-mon" />
      <item itemvalue="Application.ceph-osd" />
      <item itemvalue="Application.ceph-syn" />
      <item itemvalue="Application.cephfs" />
      <item itemvalue="Application.cephfs_testing" />
      <item itemvalue="Application.cls_references_objs" />
      <item itemvalue="Application.common" />
      <item itemvalue="Application.common-objs" />
      <item itemvalue="Application.common_buffer_obj" />
      <item itemvalue="Application.common_mountcephfs_objs" />
      <item itemvalue="Application.common_texttable_obj" />
      <item itemvalue="Application.common_utf8" />
      <item itemvalue="Application.crush_objs" />
      <item itemvalue="Application.git-update" />
      <item itemvalue="Application.heap_profiler_objs" />
      <item itemvalue="Application.krbd" />
      <item itemvalue="Application.librados-config" />
      <item itemvalue="Application.mount.ceph" />
      <item itemvalue="Application.parse_secret_objs" />
      <item itemvalue="Application.rados_snap_set_diff_obj" />
      <item itemvalue="Application.rocksdb_ext" />
      <item itemvalue="Application.vstart" />
      <item itemvalue="Application.vstart-base" />
      <item itemvalue="Application.ceph-detect-init" />
      <item itemvalue="Application.ceph_detect_init-clone" />
      <item itemvalue="Application.ceph-disk" />
      <item itemvalue="Application.ceph_disk-clone" />
      <item itemvalue="Application.ceph_volume-clone" />
      <item itemvalue="Application.client" />
      <item itemvalue="Application.cls_cephfs" />
      <item itemvalue="Application.cls_cephfs_client" />
      <item itemvalue="Application.cls_hello" />
      <item itemvalue="Application.cls_journal" />
      <item itemvalue="Application.cls_journal_client" />
      <item itemvalue="Application.cls_lock" />
      <item itemvalue="Application.cls_lock_client" />
      <item itemvalue="Application.cls_log" />
      <item itemvalue="Application.cls_log_client" />
      <item itemvalue="Application.cls_lua" />
      <item itemvalue="Application.cls_lua_client" />
      <item itemvalue="Application.cls_numops" />
      <item itemvalue="Application.cls_numops_client" />
      <item itemvalue="Application.cls_otp" />
      <item itemvalue="Application.cls_otp_client" />
      <item itemvalue="Application.cls_rbd" />
      <item itemvalue="Application.cls_rbd_client" />
      <item itemvalue="Application.cls_refcount" />
      <item itemvalue="Application.cls_refcount_client" />
      <item itemvalue="Application.cls_replica_log" />
      <item itemvalue="Application.cls_replica_log_client" />
      <item itemvalue="Application.cls_sdk" />
      <item itemvalue="Application.cls_statelog" />
      <item itemvalue="Application.cls_statelog_client" />
      <item itemvalue="Application.cls_timeindex" />
      <item itemvalue="Application.cls_timeindex_client" />
      <item itemvalue="Application.cls_user" />
      <item itemvalue="Application.cls_user_client" />
      <item itemvalue="Application.cls_version" />
      <item itemvalue="Application.cls_version_client" />
      <item itemvalue="Application.compressor_objs" />
      <item itemvalue="Application.compressor_plugins" />
      <item itemvalue="Application.ceph_lz4" />
      <item itemvalue="Application.ceph_snappy" />
      <item itemvalue="Application.ceph_zlib" />
      <item itemvalue="Application.ceph_zstd" />
      <item itemvalue="Application.zstd_ext" />
      <item itemvalue="Application.crypto_plugins" />
      <item itemvalue="Application.ceph_crypto_isal" />
      <item itemvalue="Application.isal_crypto_plugin_objs" />
      <item itemvalue="Application.dmclock" />
      <item itemvalue="Application.erasure_code" />
      <item itemvalue="Application.erasure_code_objs" />
      <item itemvalue="Application.erasure_code_plugins" />
      <item itemvalue="Application.ec_isa" />
      <item itemvalue="Application.ec_jerasure" />
      <item itemvalue="Application.ec_jerasure_generic" />
      <item itemvalue="Application.ec_jerasure_sse3" />
      <item itemvalue="Application.ec_jerasure_sse4" />
      <item itemvalue="Application.gf-complete_objs" />
      <item itemvalue="Application.jerasure_objs" />
      <item itemvalue="Application.jerasure_utils" />
      <item itemvalue="Application.ec_lrc" />
      <item itemvalue="Application.ec_shec" />
      <item itemvalue="Application.ec_shec_generic" />
      <item itemvalue="Application.ec_shec_sse3" />
      <item itemvalue="Application.ec_shec_sse4" />
      <item itemvalue="Application.shec_utils" />
      <item itemvalue="Application.global" />
      <item itemvalue="Application.global-static" />
      <item itemvalue="Application.global_common_objs" />
      <item itemvalue="Application.libglobal_objs" />
      <item itemvalue="Application.gmock" />
      <item itemvalue="Application.gmock_main" />
      <item itemvalue="Application.gtest" />
      <item itemvalue="Application.gtest_main" />
      <item itemvalue="Application.journal" />
      <item itemvalue="Application.json_spirit" />
      <item itemvalue="Application.cls_kvs" />
      <item itemvalue="Application.kv" />
      <item itemvalue="Application.kv_objs" />
      <item itemvalue="Application.lightnvm" />
      <item itemvalue="Application.lightnvm_so" />
      <item itemvalue="Application.librados" />
      <item itemvalue="Application.librados_api_obj" />
      <item itemvalue="Application.librados_objs" />
      <item itemvalue="Application.radosstriper" />
      <item itemvalue="Application.librbd" />
      <item itemvalue="Application.rbd_api" />
      <item itemvalue="Application.rbd_internal" />
      <item itemvalue="Application.rbd_types" />
      <item itemvalue="Application.liblua" />
      <item itemvalue="Application.mds" />
      <item itemvalue="Application.mon" />
      <item itemvalue="Application.ceph-bluestore-tool" />
      <item itemvalue="Application.os" />
      <item itemvalue="Application.osd" />
      <item itemvalue="Application.osdc" />
      <item itemvalue="Application.cython_modules" />
      <item itemvalue="Application.cython_cephfs" />
      <item itemvalue="Application.mgr-dashboard-test-venv" />
      <item itemvalue="Application.cython_rados" />
      <item itemvalue="Application.cython_rbd" />
      <item itemvalue="Application.rbd-fuse" />
      <item itemvalue="Application.rbd-replay" />
      <item itemvalue="Application.rbd-replay-prep" />
      <item itemvalue="Application.rbd_replay" />
      <item itemvalue="Application.rbd_replay_ios" />
      <item itemvalue="Application.rbd_replay_types" />
      <item itemvalue="Application.uninstall" />
      <item itemvalue="Application.ceph_bench_log" />
      <item itemvalue="Application.ceph_kvstorebench" />
      <item itemvalue="Application.ceph_multi_stress_watch" />
      <item itemvalue="Application.ceph_objectstore_bench" />
      <item itemvalue="Application.ceph_omapbench" />
      <item itemvalue="Google Test.ceph_perf_local" />
      <item itemvalue="Application.ceph_test_admin_socket_output" />
      <item itemvalue="Application.ceph_test_cfuse_cache_invalidate" />
      <item itemvalue="Google Test.ceph_test_filejournal" />
      <item itemvalue="Application.ceph_test_get_blkdev_size" />
      <item itemvalue="Application.ceph_test_keys" />
      <item itemvalue="Application.ceph_test_mutate" />
      <item itemvalue="Application.ceph_test_rewrite_latency" />
      <item itemvalue="Application.ceph_test_signal_handlers" />
      <item itemvalue="Google Test.ceph_test_snap_mapper" />
      <item itemvalue="Google Test.ceph_test_stress_watch" />
      <item itemvalue="Application.ceph_test_timers" />
      <item itemvalue="Application.test_build_libcephfs" />
      <item itemvalue="Application.test_build_libcommon" />
      <item itemvalue="Application.test_build_librados" />
      <item itemvalue="Application.test_c_headers" />
      <item itemvalue="Application.test_crypto" />
      <item itemvalue="Application.test_trans" />
      <item itemvalue="Application.unit-main" />
      <item itemvalue="Google Test.unittest_addrs" />
      <item itemvalue="Google Test.unittest_admin_socket" />
      <item itemvalue="Google Test.unittest_any" />
      <item itemvalue="Google Test.unittest_arch" />
      <item itemvalue="Google Test.unittest_base64" />
      <item itemvalue="Google Test.unittest_bufferlist" />
      <item itemvalue="Google Test.unittest_ceph_argparse" />
      <item itemvalue="Google Test.unittest_ceph_compatset" />
      <item itemvalue="Google Test.unittest_ceph_crypto" />
      <item itemvalue="Google Test.unittest_confutils" />
      <item itemvalue="Google Test.unittest_crypto" />
      <item itemvalue="Google Test.unittest_crypto_init" />
      <item itemvalue="Google Test.unittest_daemon_config" />
      <item itemvalue="Google Test.unittest_denc" />
      <item itemvalue="Google Test.unittest_encoding" />
      <item itemvalue="Google Test.unittest_escape" />
      <item itemvalue="Google Test.unittest_features" />
      <item itemvalue="Google Test.unittest_gather" />
      <item itemvalue="Google Test.unittest_heartbeatmap" />
      <item itemvalue="Google Test.unittest_ipaddr" />
      <item itemvalue="Google Test.unittest_libcephfs_config" />
      <item itemvalue="Google Test.unittest_log" />
      <item itemvalue="Google Test.unittest_mempool" />
      <item itemvalue="Google Test.unittest_mime" />
      <item itemvalue="Google Test.unittest_on_exit" />
      <item itemvalue="Google Test.unittest_pageset" />
      <item itemvalue="Google Test.unittest_perf_counters" />
      <item itemvalue="Google Test.unittest_prebufferedstreambuf" />
      <item itemvalue="Google Test.unittest_rbd_replay" />
      <item itemvalue="Google Test.unittest_run_cmd" />
      <item itemvalue="Google Test.unittest_signals" />
      <item itemvalue="Google Test.unittest_simple_spin" />
      <item itemvalue="Google Test.unittest_str_list" />
      <item itemvalue="Google Test.unittest_striper" />
      <item itemvalue="Google Test.unittest_strtol" />
      <item itemvalue="Google Test.unittest_subprocess" />
      <item itemvalue="Google Test.unittest_texttable" />
      <item itemvalue="Google Test.unittest_utf8" />
      <item itemvalue="Google Test.unittest_workqueue" />
      <item itemvalue="Google Test.unittest_xlist" />
      <item itemvalue="Google Test.ceph_test_cls_hello" />
      <item itemvalue="Google Test.ceph_test_cls_journal" />
      <item itemvalue="Google Test.ceph_test_cls_lock" />
      <item itemvalue="Google Test.ceph_test_cls_log" />
      <item itemvalue="Google Test.ceph_test_cls_lua" />
      <item itemvalue="Google Test.ceph_test_cls_numops" />
      <item itemvalue="Google Test.ceph_test_cls_rbd" />
      <item itemvalue="Google Test.ceph_test_cls_refcount" />
      <item itemvalue="Google Test.ceph_test_cls_replica_log" />
      <item itemvalue="Google Test.ceph_test_cls_sdk" />
      <item itemvalue="Google Test.ceph_test_cls_statelog" />
      <item itemvalue="Google Test.ceph_test_cls_version" />
      <item itemvalue="Application.get_command_descriptions" />
      <item itemvalue="Google Test.unittest_back_trace" />
      <item itemvalue="Google Test.unittest_bit_vector" />
      <item itemvalue="Google Test.unittest_blkdev" />
      <item itemvalue="Google Test.unittest_bloom_filter" />
      <item itemvalue="Google Test.unittest_bounded_key_counter" />
      <item itemvalue="Google Test.unittest_config" />
      <item itemvalue="Google Test.unittest_context" />
      <item itemvalue="Google Test.unittest_convenience" />
      <item itemvalue="Google Test.unittest_crc32c" />
      <item itemvalue="Google Test.unittest_dns_resolve" />
      <item itemvalue="Google Test.unittest_global_doublefree" />
      <item itemvalue="Google Test.unittest_histogram" />
      <item itemvalue="Google Test.unittest_hobject" />
      <item itemvalue="Google Test.unittest_hostname" />
      <item itemvalue="Google Test.unittest_interval_map" />
      <item itemvalue="Google Test.unittest_interval_set" />
      <item itemvalue="Google Test.unittest_io_priority" />
      <item itemvalue="Google Test.unittest_iso_8601" />
      <item itemvalue="Google Test.unittest_json_formattable" />
      <item itemvalue="Google Test.unittest_lru" />
      <item itemvalue="Google Test.unittest_mclock_priority_queue" />
      <item itemvalue="Google Test.unittest_mutex" />
      <item itemvalue="Google Test.unittest_mutex_debug" />
      <item itemvalue="Google Test.unittest_perf_histogram" />
      <item itemvalue="Google Test.unittest_prioritized_queue" />
      <item itemvalue="Google Test.unittest_random" />
      <item itemvalue="Google Test.unittest_readahead" />
      <item itemvalue="Google Test.unittest_safe_io" />
      <item itemvalue="Google Test.unittest_shared_cache" />
      <item itemvalue="Google Test.unittest_sharedptr_registry" />
      <item itemvalue="Google Test.unittest_shunique_lock" />
      <item itemvalue="Google Test.unittest_sloppy_crc_map" />
      <item itemvalue="Google Test.unittest_static_ptr" />
      <item itemvalue="Google Test.unittest_str_map" />
      <item itemvalue="Google Test.unittest_tableformatter" />
      <item itemvalue="Google Test.unittest_throttle" />
      <item itemvalue="Google Test.unittest_time" />
      <item itemvalue="Google Test.unittest_url_escape" />
      <item itemvalue="Google Test.unittest_util" />
      <item itemvalue="Google Test.unittest_weighted_priority_queue" />
      <item itemvalue="Google Test.unittest_xmlformatter" />
      <item itemvalue="Application.ceph_example" />
      <item itemvalue="Google Test.unittest_compression" />
      <item itemvalue="Google Test.unittest_crush" />
      <item itemvalue="Google Test.unittest_crush_wrapper" />
      <item itemvalue="Google Test.unittest_direct_messenger" />
      <item itemvalue="Application.ceph_erasure_code" />
      <item itemvalue="Application.ceph_erasure_code_benchmark" />
      <item itemvalue="Application.ceph_erasure_code_non_regression" />
      <item itemvalue="Application.ec_example" />
      <item itemvalue="Application.ec_fail_to_initialize" />
      <item itemvalue="Application.ec_fail_to_register" />
      <item itemvalue="Application.ec_hangs" />
      <item itemvalue="Application.ec_missing_entry_point" />
      <item itemvalue="Application.ec_missing_version" />
      <item itemvalue="Google Test.unittest_erasure_code" />
      <item itemvalue="Google Test.unittest_erasure_code_example" />
      <item itemvalue="Google Test.unittest_erasure_code_isa" />
      <item itemvalue="Google Test.unittest_erasure_code_jerasure" />
      <item itemvalue="Google Test.unittest_erasure_code_lrc" />
      <item itemvalue="Google Test.unittest_erasure_code_plugin" />
      <item itemvalue="Google Test.unittest_erasure_code_plugin_isa" />
      <item itemvalue="Google Test.unittest_erasure_code_plugin_jerasure" />
      <item itemvalue="Google Test.unittest_erasure_code_plugin_lrc" />
      <item itemvalue="Google Test.unittest_erasure_code_plugin_shec" />
      <item itemvalue="Google Test.unittest_erasure_code_shec" />
      <item itemvalue="Google Test.unittest_erasure_code_shec_all" />
      <item itemvalue="Google Test.unittest_erasure_code_shec_arguments" />
      <item itemvalue="Google Test.unittest_erasure_code_shec_thread" />
      <item itemvalue="Google Test.ceph_test_filestore" />
      <item itemvalue="Google Test.unittest_mds_types" />
      <item itemvalue="Application.journal_test_mock" />
      <item itemvalue="Google Test.unittest_journal" />
      <item itemvalue="Google Test.ceph_test_libcephfs" />
      <item itemvalue="Google Test.ceph_test_libcephfs_access" />
      <item itemvalue="Google Test.ceph_test_rados_api_aio" />
      <item itemvalue="Google Test.ceph_test_rados_api_asio" />
      <item itemvalue="Google Test.ceph_test_rados_api_c_read_operations" />
      <item itemvalue="Google Test.ceph_test_rados_api_c_write_operations" />
      <item itemvalue="Google Test.ceph_test_rados_api_cls" />
      <item itemvalue="Google Test.ceph_test_rados_api_cmd" />
      <item itemvalue="Google Test.ceph_test_rados_api_io" />
      <item itemvalue="Google Test.ceph_test_rados_api_list" />
      <item itemvalue="Google Test.ceph_test_rados_api_lock" />
      <item itemvalue="Google Test.ceph_test_rados_api_misc" />
      <item itemvalue="Google Test.ceph_test_rados_api_pool" />
      <item itemvalue="Google Test.ceph_test_rados_api_service" />
      <item itemvalue="Google Test.ceph_test_rados_api_snapshots" />
      <item itemvalue="Google Test.ceph_test_rados_api_stat" />
      <item itemvalue="Google Test.ceph_test_rados_api_tier" />
      <item itemvalue="Google Test.ceph_test_rados_api_watch_notify" />
      <item itemvalue="Application.libradostest_obj" />
      <item itemvalue="Application.radostest" />
      <item itemvalue="Google Test.unittest_librados" />
      <item itemvalue="Google Test.unittest_librados_config" />
      <item itemvalue="Application.rados_test_stub" />
      <item itemvalue="Google Test.ceph_test_rados_striper_api_aio" />
      <item itemvalue="Google Test.ceph_test_rados_striper_api_io" />
      <item itemvalue="Google Test.ceph_test_rados_striper_api_striping" />
      <item itemvalue="Application.rados_striper_test" />
      <item itemvalue="Google Test.ceph_test_librbd" />
      <item itemvalue="Google Test.ceph_test_librbd_api" />
      <item itemvalue="Application.ceph_test_librbd_fsx" />
      <item itemvalue="Application.rbd_test" />
      <item itemvalue="Application.rbd_test_mock" />
      <item itemvalue="Google Test.unittest_librbd" />
      <item itemvalue="Google Test.unittest_mds_authcap" />
      <item itemvalue="Google Test.unittest_mds_sessionfilter" />
      <item itemvalue="Application.simple_client" />
      <item itemvalue="Application.simple_server" />
      <item itemvalue="Google Test.ceph_test_mon_msg" />
      <item itemvalue="Application.ceph_test_mon_workloadgen" />
      <item itemvalue="Google Test.unittest_mon_moncap" />
      <item itemvalue="Google Test.unittest_mon_montypes" />
      <item itemvalue="Google Test.unittest_mon_pgmap" />
      <item itemvalue="Google Test.ceph_perf_msgr_client" />
      <item itemvalue="Google Test.ceph_perf_msgr_server" />
      <item itemvalue="Google Test.ceph_test_async_driver" />
      <item itemvalue="Google Test.ceph_test_async_networkstack" />
      <item itemvalue="Google Test.ceph_test_msgr" />
      <item itemvalue="Google Test.ceph_test_keyvaluedb_atomicity" />
      <item itemvalue="Google Test.ceph_test_keyvaluedb_iterators" />
      <item itemvalue="Google Test.ceph_test_object_map" />
      <item itemvalue="Google Test.ceph_perf_objectstore" />
      <item itemvalue="Application.ceph_test_filestore_idempotent" />
      <item itemvalue="Application.ceph_test_filestore_idempotent_sequence" />
      <item itemvalue="Google Test.ceph_test_keyvaluedb" />
      <item itemvalue="Google Test.ceph_test_objectstore" />
      <item itemvalue="Application.demo" />
      <item itemvalue="Application.store_test_fixture" />
      <item itemvalue="Google Test.unittest_alloc" />
      <item itemvalue="Google Test.unittest_bit_alloc" />
      <item itemvalue="Google Test.unittest_bluefs" />
      <item itemvalue="Google Test.unittest_bluestore_types" />
      <item itemvalue="Google Test.unittest_chain_xattr" />
      <item itemvalue="Google Test.unittest_memstore_clone" />
      <item itemvalue="Google Test.unittest_rocksdb_option" />
      <item itemvalue="Google Test.unittest_transaction" />
      <item itemvalue="Google Test.unittest_lfnindex" />
      <item itemvalue="Application.ceph_test_rados" />
      <item itemvalue="Google Test.unittest_ec_transaction" />
      <item itemvalue="Google Test.unittest_ecbackend" />
      <item itemvalue="Google Test.unittest_extent_cache" />
      <item itemvalue="Google Test.unittest_hitset" />
      <item itemvalue="Google Test.unittest_mclock_client_queue" />
      <item itemvalue="Google Test.unittest_mclock_op_class_queue" />
      <item itemvalue="Google Test.unittest_osd_osdcap" />
      <item itemvalue="Google Test.unittest_osd_types" />
      <item itemvalue="Google Test.unittest_osdmap" />
      <item itemvalue="Google Test.unittest_osdscrub" />
      <item itemvalue="Google Test.unittest_pg_transaction" />
      <item itemvalue="Google Test.unittest_pglog" />
      <item itemvalue="Application.ceph_test_objectcacher_stress" />
      <item itemvalue="Google Test.ceph_test_rbd_mirror" />
      <item itemvalue="Application.ceph_test_rbd_mirror_random_write" />
      <item itemvalue="Application.rbd_mirror_test" />
      <item itemvalue="Google Test.unittest_rbd_mirror" />
      <item itemvalue="Application.ceph_test_rados_delete_pools_parallel" />
      <item itemvalue="Application.ceph_test_rados_list_parallel" />
      <item itemvalue="Application.ceph_test_rados_open_pools_parallel" />
      <item itemvalue="Application.ceph_test_rados_watch_notify" />
      <item itemvalue="Application.systest" />
      <item itemvalue="Application.ceph-authtool" />
      <item itemvalue="Application.ceph-client-debug" />
      <item itemvalue="Application.ceph-conf" />
      <item itemvalue="Application.ceph-kvstore-tool" />
      <item itemvalue="Application.ceph-monstore-tool" />
      <item itemvalue="Application.ceph-objectstore-tool" />
      <item itemvalue="Application.ceph-osdomap-tool" />
      <item itemvalue="Application.ceph_psim" />
      <item itemvalue="Application.ceph_radosacl" />
      <item itemvalue="Application.ceph_scratchtool" />
      <item itemvalue="Application.ceph_scratchtoolpp" />
      <item itemvalue="Application.crushtool" />
      <item itemvalue="Application.monmaptool" />
      <item itemvalue="Application.osdmaptool" />
      <item itemvalue="Application.rados" />
      <item itemvalue="Application.cephfs-data-scan" />
      <item itemvalue="Application.cephfs-journal-tool" />
      <item itemvalue="Application.cephfs-table-tool" />
      <item itemvalue="Application.rbd" />
      <item itemvalue="Application.rbd-mirror" />
      <item itemvalue="Application.rbd_mirror_internal" />
      <item itemvalue="Application.rbd_mirror_types" />
      <item itemvalue="Application.rbd-nbd" />
      <item itemvalue="Application.cyg_profile-tp" />
      <item itemvalue="Application.eventtrace-tp" />
      <item itemvalue="Application.librados-tp" />
      <item itemvalue="Application.librbd-tp" />
      <item itemvalue="Application.objectstore-tp" />
      <item itemvalue="Application.oprequest-tp" />
      <item itemvalue="Application.os_tp" />
      <item itemvalue="Application.osd-tp" />
      <item itemvalue="Application.osd_tp" />
      <item itemvalue="Application.pg-tp" />
      <item itemvalue="Application.rados_tp" />
      <item itemvalue="Application.rbd_tp" />
      <item itemvalue="Application.rgw_op-tp" />
      <item itemvalue="Application.rgw_op_tp" />
      <item itemvalue="Application.rgw_rados-tp" />
      <item itemvalue="Application.rgw_rados_tp" />
      <item itemvalue="Application.tracepoint_libraries" />
    </list>
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="fb239463-a751-42ca-86b4-d39acf30ba4a" name="Default Changelist" comment="" />
      <created>1544607779614</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1544607779614</updated>
      <workItem from="1544607783515" duration="2067000" />
      <workItem from="1544610257282" duration="903000" />
      <workItem from="1544611265490" duration="13340000" />
      <workItem from="1544753177374" duration="573000" />
      <workItem from="1544753788280" duration="5171000" />
      <workItem from="1544763071865" duration="22365000" />
      <workItem from="1545028478474" duration="7010000" />
      <workItem from="1545035970818" duration="6472000" />
      <workItem from="1545045982667" duration="22926000" />
      <workItem from="1545749708749" duration="3118000" />
      <workItem from="1545792154399" duration="3747000" />
      <workItem from="1545798366170" duration="8654000" />
      <workItem from="1545875861640" duration="5982000" />
      <workItem from="1545881890002" duration="873000" />
      <workItem from="1545886437370" duration="10313000" />
      <workItem from="1545913261585" duration="20192000" />
      <workItem from="1546000866936" duration="94000" />
      <workItem from="1546000980031" duration="22000" />
      <workItem from="1546001034446" duration="41000" />
      <workItem from="1546001105577" duration="3646000" />
      <workItem from="1546060122341" duration="4500000" />
      <workItem from="1546068627740" duration="12458000" />
      <workItem from="1546084216719" duration="7627000" />
      <workItem from="1546093944683" duration="38289000" />
      <workItem from="1546326477872" duration="15330000" />
      <workItem from="1546411983744" duration="3444000" />
      <workItem from="1546480409636" duration="15119000" />
      <workItem from="1546826297951" duration="19335000" />
      <workItem from="1546864448793" duration="80000" />
      <workItem from="1546864577017" duration="5000" />
      <workItem from="1546864781966" duration="72000" />
      <workItem from="1546864860007" duration="8710000" />
      <workItem from="1546912659275" duration="82000" />
      <workItem from="1546912804681" duration="11000" />
      <workItem from="1546912821038" duration="5136000" />
      <workItem from="1546923015825" duration="86000" />
      <workItem from="1546923105149" duration="24000" />
      <workItem from="1546923164572" duration="458000" />
      <workItem from="1546923958851" duration="1715000" />
      <workItem from="1546925998635" duration="6872000" />
      <workItem from="1546951745318" duration="725000" />
      <workItem from="1547462380900" duration="647000" />
      <workItem from="1547465363855" duration="1972000" />
    </task>
    <servers />
  </component>
  <component name="TimeTrackingManager">
    <option name="totallyTimeSpent" value="280206000" />
  </component>
  <component name="TodoView">
    <todo-panel id="selected-file">
      <is-autoscroll-to-source value="true" />
    </todo-panel>
    <todo-panel id="all">
      <are-packages-shown value="true" />
      <is-autoscroll-to-source value="true" />
    </todo-panel>
  </component>
  <component name="ToolWindowManager">
    <frame x="0" y="28" width="1920" height="1018" extended-state="1" />
    <editor active="true" />
    <layout>
      <window_info content_ui="combo" id="Project" order="0" visible="true" weight="0.16488223" />
      <window_info id="Structure" order="1" side_tool="true" weight="0.25" />
      <window_info id="Favorites" order="2" side_tool="true" />
      <window_info anchor="bottom" id="Message" order="0" />
      <window_info anchor="bottom" id="Find" order="1" weight="0.56621003" />
      <window_info anchor="bottom" id="Run" order="2" />
      <window_info anchor="bottom" id="Debug" order="3" weight="0.4" />
      <window_info anchor="bottom" id="Cvs" order="4" weight="0.25" />
      <window_info anchor="bottom" id="Inspection" order="5" weight="0.4" />
      <window_info anchor="bottom" id="TODO" order="6" weight="0.32994923" />
      <window_info anchor="bottom" id="Database Changes" order="7" show_stripe_button="false" />
      <window_info active="true" anchor="bottom" id="Terminal" order="8" sideWeight="0.49730894" visible="true" weight="0.24827586" />
      <window_info anchor="bottom" id="Event Log" order="9" sideWeight="0.5043057" side_tool="true" weight="0.6689498" />
      <window_info anchor="bottom" id="Version Control" order="10" show_stripe_button="false" />
      <window_info anchor="bottom" id="CMake" order="11" sideWeight="0.4956943" weight="0.4326484" />
      <window_info active="true" anchor="bottom" id="Messages" order="12" visible="true" weight="0.32978722" />
      <window_info anchor="right" id="Commander" internal_type="SLIDING" order="0" type="SLIDING" weight="0.4" />
      <window_info anchor="right" id="Ant Build" order="1" weight="0.25" />
      <window_info anchor="right" content_ui="combo" id="Hierarchy" order="2" weight="0.25" />
      <window_info anchor="right" id="Database" order="3" />
    </layout>
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
  </component>
  <component name="VcsContentAnnotationSettings">
    <option name="myLimit" value="2678400000" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="com.jetbrains.cidr.execution.debugger.OCBreakpointType">
          <url>file://$PROJECT_DIR$/src/os/bluestore/KernelDevice.cc</url>
          <line>581</line>
          <option name="timeStamp" value="1" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
  <component name="editorHistoryManager">
    <entry file="file://$PROJECT_DIR$/src/os/ObjectStore.cc">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="2898">
          <caret line="126" column="17" selection-start-line="126" selection-start-column="17" selection-end-line="126" selection-end-column="17" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/os/memstore/MemStore.cc">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="5129">
          <caret line="223" column="14" selection-start-line="223" selection-start-column="14" selection-end-line="223" selection-end-column="14" />
        </state>
      </provider>
    </entry>
    <entry file="file:///usr/include/libgen.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="770">
          <caret line="34" column="8" selection-start-line="34" selection-start-column="8" selection-end-line="34" selection-end-column="8" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/os/bluestore/bluestore_types.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="16008">
          <caret line="696" column="7" selection-start-line="696" selection-start-column="7" selection-end-line="696" selection-end-column="7" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/include/interval_set.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="167">
          <caret line="514" column="7" selection-start-line="514" selection-start-column="7" selection-end-line="514" selection-end-column="7" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/os/bluestore/StupidAllocator.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="621">
          <caret line="27" column="21" selection-start-line="27" selection-start-column="11" selection-end-line="27" selection-end-column="21" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/os/bluestore/StupidAllocator.cc">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="644">
          <caret line="143" column="21" selection-start-line="143" selection-start-column="21" selection-end-line="143" selection-end-column="21" />
        </state>
      </provider>
    </entry>
    <entry file="file:///opt/rh/devtoolset-7/root/usr/include/c++/7/bits/stl_list.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="281">
          <caret line="895" column="6" selection-start-line="895" selection-start-column="6" selection-end-line="895" selection-end-column="6" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/include/encoding.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="770">
          <caret line="124" column="37" selection-start-line="124" selection-start-column="37" selection-end-line="124" selection-end-column="37" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/include/spinlock.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="736">
          <caret line="32" column="6" selection-start-line="32" selection-start-column="6" selection-end-line="32" selection-end-column="6" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/os/bluestore/Allocator.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="506">
          <caret line="22" column="14" selection-start-line="22" selection-start-column="14" selection-end-line="22" selection-end-column="14" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/os/bluestore/BlueFS.cc">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="425">
          <caret line="156" column="17" selection-start-line="156" selection-start-column="13" selection-end-line="156" selection-end-column="17" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/global/global_context.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="483">
          <caret line="21" column="20" selection-start-line="21" selection-start-column="20" selection-end-line="21" selection-end-column="20" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/common/ceph_context.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="272">
          <caret line="41" column="18" selection-start-line="41" selection-start-column="18" selection-end-line="41" selection-end-column="18" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/os/kstore/KStore.cc">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="770">
          <caret line="1022" column="12" selection-start-line="1022" selection-start-column="12" selection-end-line="1022" selection-end-column="12" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/common/config.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="272">
          <caret line="365" column="35" selection-start-line="365" selection-start-column="17" selection-end-line="365" selection-end-column="35" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/ceph-disk/ceph_disk/main.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="272">
          <caret line="650" column="4" selection-start-line="650" selection-start-column="4" selection-end-line="650" selection-end-column="4" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/os/bluestore/KernelDevice.cc">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="655">
          <caret line="50" column="1" lean-forward="true" selection-start-line="50" selection-start-column="1" selection-end-line="50" selection-end-column="1" />
          <folding>
            <element signature="e#1402#1611#0" />
            <element signature="e#1613#4670#0" />
            <element signature="e#4516#4725#0" />
            <element signature="e#4727#5129#0" />
            <element signature="e#5131#5311#0" />
            <element signature="e#5313#7326#0" />
            <element signature="e#7328#7641#0" />
            <element signature="e#7643#7820#0" />
            <element signature="e#7822#9408#0" />
            <element signature="e#9410#9854#0" />
            <element signature="e#9856#10034#0" />
            <element signature="e#10036#10133#0" />
            <element signature="e#10135#10540#0" />
            <element signature="e#10542#10746#0" />
            <element signature="e#10748#11091#0" />
            <element signature="e#11093#14670#0" />
            <element signature="e#14672#15710#0" />
            <element signature="e#15712#15983#0" />
            <element signature="e#15985#16535#0" />
            <element signature="e#16537#16674#0" />
            <element signature="e#16676#17014#0" />
            <element signature="e#17016#17346#0" />
            <element signature="e#17348#18691#0" />
            <element signature="e#18693#19727#0" />
            <element signature="e#19729#20333#0" />
            <element signature="e#20335#22051#0" />
            <element signature="e#22053#22346#0" />
            <element signature="e#22348#23054#0" />
            <element signature="e#23056#23726#0" />
            <element signature="e#23728#24489#0" />
            <element signature="e#24491#25950#0" />
            <element signature="e#25952#26411#0" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/vstart.sh">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="422">
          <caret line="534" column="39" selection-start-line="534" selection-start-column="39" selection-end-line="534" selection-end-column="39" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/test/objectstore_bench.cc">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="458">
          <caret line="185" column="7" lean-forward="true" selection-start-line="185" selection-start-column="7" selection-end-line="185" selection-end-column="7" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/common/buffer.cc">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="106">
          <caret line="791" column="23" selection-start-line="791" selection-start-column="23" selection-end-line="791" selection-end-column="23" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/os/ObjectStore.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="410">
          <caret line="1031" column="30" selection-start-line="1031" selection-start-column="30" selection-end-line="1031" selection-end-column="30" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/os/bluestore/BitmapFreelistManager.cc">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-943">
          <caret line="239" selection-start-line="239" selection-end-line="239" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/os/kv.h">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/src/os/bluestore/BlockDevice.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="989">
          <caret line="43" column="6" selection-start-line="43" selection-start-column="6" selection-end-line="43" selection-end-column="6" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/os/bluestore/libocssd/objssd-nvme.h" />
    <entry file="file://$PROJECT_DIR$/src/rocksdb/CMakeLists.txt">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-22149" />
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/os/bluestore/BlueStore.cc">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="203895">
          <caret line="8865" selection-start-line="8865" selection-end-line="8865" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/do_cmake.sh">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="92">
          <caret line="4" column="1" selection-start-line="4" selection-start-column="1" selection-end-line="4" selection-end-column="1" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/os/bluestore/libocssd/objssd-nvme.c" />
    <entry file="file://$PROJECT_DIR$/src/os/bluestore/libocssd/CMakeLists.txt" />
    <entry file="file://$PROJECT_DIR$/src/os/bluestore/objssd-nvme.h" />
    <entry file="file://$PROJECT_DIR$/src/kv/CMakeLists.txt">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="161">
          <caret line="7" column="20" selection-start-line="7" selection-start-column="20" selection-end-line="7" selection-end-column="20" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/test/objectstore/CMakeLists.txt">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/src/common/options.cc">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="84042">
          <caret line="3654" selection-start-line="3654" selection-end-line="3654" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/CMakeLists.txt">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="259">
          <caret line="863" column="20" selection-start-line="863" selection-start-column="20" selection-end-line="863" selection-end-column="20" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/libocssd/test.c" />
    <entry file="file://$PROJECT_DIR$/CMakeLists.txt">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-9953">
          <caret line="230" selection-start-line="230" selection-end-line="230" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/libocssd/include/liblightnvm.h">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/src/libocssd/CMakeLists.txt">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="379">
          <caret line="106" selection-start-line="106" selection-end-line="106" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/os/CMakeLists.txt">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="276">
          <caret line="69" column="13" lean-forward="true" selection-start-line="69" selection-start-column="13" selection-end-line="69" selection-end-column="13" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/libocssd/objssd-nvme.c">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-1518">
          <caret line="12" column="17" lean-forward="true" selection-start-line="12" selection-start-column="17" selection-end-line="12" selection-end-column="17" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/libocssd/objssd-nvme.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="138">
          <caret line="20" column="9" lean-forward="true" selection-start-line="20" selection-start-column="9" selection-end-line="20" selection-end-column="9" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/common/legacy_config_opts.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="587">
          <caret line="918" selection-start-line="918" selection-end-line="918" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/os/bluestore/BlockDevice.cc">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="576">
          <caret line="172" column="1" selection-start-line="172" selection-start-column="1" selection-end-line="172" selection-end-column="1" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/.gitignore">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-416">
          <caret line="31" column="6" lean-forward="true" selection-start-line="31" selection-start-column="6" selection-end-line="31" selection-end-column="6" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/.gitignore">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/src/os/bluestore/BlueStore.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="601">
          <caret line="157" column="6" selection-start-line="157" selection-start-column="6" selection-end-line="157" selection-end-column="6" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/os/bluestore/OCDevice.cc">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="375">
          <caret line="103" column="49" selection-start-line="103" selection-start-column="45" selection-end-line="103" selection-end-column="49" />
          <folding>
            <element signature="e#465#1411#0" />
            <element signature="e#1413#1585#0" />
            <element signature="e#1700#1863#0" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/os/bluestore/OCDevice.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="382">
          <caret line="99" column="103" selection-start-line="99" selection-start-column="103" selection-end-line="99" selection-end-column="103" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/test/objectstore/demo.cc">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="456">
          <caret line="24" lean-forward="true" selection-start-line="24" selection-end-line="24" />
          <folding>
            <element signature="e#90#107#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
  </component>
</project>